{"version":3,"file":"static/js/995.58862413.chunk.js","mappings":"uQAEaA,EAAcC,EAAAA,EAAAA,IAAH,+PAUXC,EAAQD,EAAAA,EAAAA,GAAH,2PAYLE,EAAaF,EAAAA,EAAAA,EAAH,oSAgBVG,EAAWH,EAAAA,EAAAA,GAAH,0PAYRI,EAAeJ,EAAAA,EAAAA,IAAH,0GAMZK,EAAQL,EAAAA,EAAAA,MAAH,qIAOLM,EAAaN,EAAAA,EAAAA,EAAH,8CAIVO,EAAQP,EAAAA,EAAAA,MAAH,qLAQLQ,EAAgBR,EAAAA,EAAAA,IAAH,oFAKbS,EAAcT,EAAAA,EAAAA,OAAH,qdAqBXU,EAAiBV,EAAAA,EAAAA,OAAH,gdAsBdW,EAAWX,EAAAA,EAAAA,EAAH,2C,mBCzCrB,EAlEkB,WAChB,OAA0CY,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,eAuBjB,OACE,UAACnB,EAAD,YACE,SAACE,EAAD,UAAO,8CACP,SAACC,EAAD,CAAYiB,KAAK,kDAAjB,SAAmE,YAGnE,kBAAMC,SA3BW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAa,CACjBC,MAAOT,EACPU,SAAUZ,GAENa,EAASL,EAAMM,YAAYC,UAAUC,KAC3CC,QAAQC,IAAI,gBAERd,EADO,UAAXS,GACaM,EAAAA,EAAAA,IAAUT,IACVU,EAAAA,EAAAA,IAAaV,GAC3B,EAgBG,WACE,SAACpB,EAAD,UAAU,+DAGV,UAACC,EAAD,YACE,UAACC,EAAD,YACE,UAACC,EAAD,YAAcS,IAAa,mBAAQmB,MAAO,CAACC,MAAO,WAAvB,SAAmC,MAAW,aACzE,SAAC5B,EAAD,CAAO6B,SAjBQ,SAAAf,GACvB,IAAMgB,EAAahB,EAAMiB,OAAOC,MAChCvB,EAAaqB,EACd,EAc4CG,KAAK,QAAQX,KAAK,QAAQY,YAAY,oBACvE1B,IAAa,SAACJ,EAAD,UAAU,iCAE3B,UAACN,EAAD,YACE,UAACC,EAAD,YAAcO,IAAiB,mBAAQqB,MAAO,CAACC,MAAO,WAAvB,SAAmC,MAAW,gBAC7E,SAAC5B,EAAD,CACE6B,SA3BiB,SAAAf,GAC3B,IAAMgB,EAAahB,EAAMiB,OAAOC,MAChCzB,EAAiBuB,EAClB,EAyBWG,KAAK,WACLX,KAAK,WACLY,YAAY,mBAEZ5B,IAAiB,SAACF,EAAD,UAAU,oCAGjC,UAACH,EAAD,YACE,SAACC,EAAD,CAAaoB,KAAK,QAAQW,KAAK,SAA/B,SAAwC,YAGxC,SAAC9B,EAAD,CAAgBmB,KAAK,WAAWW,KAAK,SAArC,SAA8C,yBAOvD,EChFYzC,EAAcC,EAAAA,EAAAA,IAAH,6O,GAOIA,EAAAA,EAAAA,IAAH,2IAQJA,EAAAA,EAAAA,IAAH,mD,SCHlB,EAV0B,WACxB,OACE,UAAC,EAAD,YACE,gBAAK0C,IAAKC,EAAQC,IAAI,YACtB,SAAC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginRegistration/LoginRegistration.styled.jsx","pages/LoginRegistration/LoginRegistration.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  padding: 50px 30px 60px 30px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 30px;\n  align-items: center;\n  width: 392px;\n  background-color: #383847;\n  filter: drop-shadow(0px 4px 40px rgba(0, 0, 0, 0.25));\n`;\nexport const Title = styled.h1`\n  color: #f6f7fb;\n  width: 218px;\n  height: 38px;\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 19px;\n  text-align: center;\n  letter-spacing: 0.04em;\n`;\nexport const GoggleLink = styled.a`\n  margin-top: 10px;\n  padding: 10px 20px;\n  border-radius: 16px;\n  font-weight: 500;\n  text-decoration: none;\n  display: flex;\n  gap: 10px;\n  color: black;\n  background-color: #f6f7fb;\n  &:hover {\n    background-color: #ededed;\n  }\n  margin-bottom: 32px;\n`;\n\nexport const Subtitle = styled.h2`\nwidth: 288px;\n  color: #f6f7fb;\n  height: 32px;\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.04em;\n  margin-bottom: 32px;\n`;\nexport const LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 40px;\n`;\nexport const Label = styled.label`\n  color: #f6f7fb;\n  font-weight: 200;\n  font-size: 14px;\n  line-height: 14px;\n  letter-spacing: 0.04em;\n`;\nexport const LabelTitle = styled.p`\n  margin-left: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 288px;\n  padding: 16px 16px;\n  background: #f6f7fb;\n  border-radius: 16px;\n  border: none;\n  box-shadow: 1px 3px 5px rgba(21, 23, 21, 0.656);\n`;\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  justify-content: center;\n`;\nexport const LoginButton = styled.button`\n  background: #42a652;\n  box-shadow: 1px 3px 5px rgba(96, 196, 112, 0.35);\n  border-radius: 16px;\n  border: none;\n  width: 136px;\n  height: 44px;\n  cursor: pointer;\n  &:hover {\n    background-color: #308e3f;\n  }\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #ffffff;\n`;\nexport const RegisterButton = styled.button`\n  background: #f5f6fb;\n  box-shadow: 0px 4px 7px rgba(0, 0, 0, 0.25);\n  border-radius: 15px;\n  border: none;\n  width: 136px;\n  height: 44px;\n  cursor: pointer;\n  &:hover {\n    background-color: #e4e5e9;\n  }\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #1f1f27;\n`;\n\nexport const Required = styled.p `\n  color: #FE4566;\n`","import { useDispatch } from 'react-redux';\nimport { loginUser, registerUser } from 'redux/auth/authOperations';\nimport {\n  FormWrapper,\n  Title,\n  GoggleLink,\n  Subtitle,\n  Label,\n  Input,\n  ButtonWrapper,\n  LabelTitle,\n  LabelWrapper,\n  LoginButton,\n  RegisterButton,\n  Required\n} from './LoginForm.styled';\n//import { FcGoogle } from 'react-icons/fc';\nimport { useState } from 'react';\nconst LoginForm = () => {\n  const [inputPassword, setInputPassword] = useState('');\n  const [inputName, setInputName] = useState('')\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formValues = {\n      email: inputName,\n      password: inputPassword,\n    };\n    const submit = event.nativeEvent.submitter.name;\n    console.log('handleSubmit');\n    submit === 'login'\n      ? dispatch(loginUser(formValues))\n      : dispatch(registerUser(formValues));\n  };\n\n  const handleChangePassword = event => {\n    const inputValue = event.target.value;\n    setInputPassword(inputValue);\n  }\n  const handleChangeName = event => {\n    const inputValue = event.target.value;\n    setInputName(inputValue);\n  }\n  return (\n    <FormWrapper>\n      <Title>You can log in with your Google Account:</Title>\n      <GoggleLink href=\"https://kapusta-backend.goit.global/auth/google\">\n        Google\n      </GoggleLink>\n      <form onSubmit={handleSubmit}>\n        <Subtitle>\n          Or log in using an email and password, after registering:\n        </Subtitle>\n        <LabelWrapper>\n          <Label>\n            <LabelTitle>{!inputName && <symbol style={{color: '#FE4566'}}>*</symbol>}Email:</LabelTitle>\n            <Input onChange={handleChangeName} type=\"email\" name=\"email\" placeholder=\"your@email.com\" />\n            {!inputName && <Required>This is a required field</Required>}\n          </Label>\n          <Label>\n            <LabelTitle>{!inputPassword && <symbol style={{color: '#FE4566'}}>*</symbol>}Password:</LabelTitle>\n            <Input\n              onChange={handleChangePassword}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"your password\"\n            />\n            {!inputPassword && <Required>This is a required field</Required>}\n          </Label>\n        </LabelWrapper>\n        <ButtonWrapper>\n          <LoginButton name=\"login\" type=\"submit\">\n            Log in\n          </LoginButton>\n          <RegisterButton name=\"register\" type=\"submit\">\n            Registration\n          </RegisterButton>\n        </ButtonWrapper>\n      </form>\n    </FormWrapper>\n  );\n};\n\nexport default LoginForm;\n","import styled from \"@emotion/styled\";\n\nexport const FormWrapper = styled.div `\n    display: flex;\n    gap: 150px;\n    background: linear-gradient(271.02deg, #1F1F27 34.79%, #383847 89.69%);\n    box-shadow: inset 0px 2px 24px rgba(132, 132, 132, 0.2);\n    padding: 100px 50px 100px 50px;\n`\nexport const ImageWrapper = styled.div `\n/* z-index: 1;\nposition: relative;\nwidth: 332px;\nheight: 332px;\nbackground: #B0E8B9;\nfilter: blur(200px); */\n`;\nexport const Image = styled.img`\n  position: relative;\n  \n`;","import LoginForm from 'components/LoginForm/LoginForm';\nimport { FormWrapper } from 'pages/LoginRegistration/LoginRegistration.styled.jsx';\nimport wallet from 'images/wallet.png';\n\nconst LoginRegistration = () => {\n  return (\n    <FormWrapper>\n      <img src={wallet} alt=\"wallet\" />\n      <LoginForm />\n    </FormWrapper>\n  );\n};\n\n\nexport default LoginRegistration;\n"],"names":["FormWrapper","styled","Title","GoggleLink","Subtitle","LabelWrapper","Label","LabelTitle","Input","ButtonWrapper","LoginButton","RegisterButton","Required","useState","inputPassword","setInputPassword","inputName","setInputName","dispatch","useDispatch","href","onSubmit","event","preventDefault","formValues","email","password","submit","nativeEvent","submitter","name","console","log","loginUser","registerUser","style","color","onChange","inputValue","target","value","type","placeholder","src","wallet","alt"],"sourceRoot":""}
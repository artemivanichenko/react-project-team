{"version":3,"file":"static/js/400.77bcafae.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.jsx","components/Balance/Balance.jsx","components/ReportsLink/ReportsLink.jsx","components/HomeBar/HomeBar.jsx","components/AddTransaction/AddTransaction.styled.jsx","components/AddTransaction/AddTransaction.jsx","components/Summary/Summary.styled.jsx","components/Summary/Summary.jsx","components/TransactionTypeTabs/TransactionTypeTabs.styled.jsx","components/TransactionTypeTabs/TransactionTypeTabs.jsx","components/TransactionsList/TransactionsList.jsx","components/TransactionContainer/TransactionContainer.styled.jsx","components/TransactionContainer/TransactionContainer.jsx","pages/Home/Home.jsx","shared/category.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NumericFormat } from 'react-number-format';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  width: 334px;\n  margin: 40px auto 8px auto;\n`;\n\nexport const TextStyled = styled.p`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.02em;\n  color: #c7ccdc;\n`;\n\nexport const ButtonStyled = styled.button`\n  background-color: transparent;\n  border: 2px solid #80848f;\n  border-radius: 16px;\n  width: 125px;\n  height: 44px;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #c7ccdc;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  &:hover {\n    background-color: #42a652;\n    border: 2px solid #42a652;\n    color: #f6f7fb;\n  }\n`;\n\nexport const StyledNumericFormat = styled(NumericFormat)`\n  background-color: transparent;\n  border: 2px solid #80848f;\n  border-radius: 16px;\n  width: 125px;\n  height: 44px;\n  color: #f6f7fb;\n  text-align: end;\n  box-sizing: border-box;\n  padding: 12px 20px 12px 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addBalance } from 'redux/transaction/transactionOperations';\nimport { selectBalance } from 'redux/transaction/transactionSelectors';\nimport {\n  FormStyled,\n  TextStyled,\n  ButtonStyled,\n  StyledNumericFormat,\n} from './Balance.styled';\n\nconst Balance = () => {\n  const balance = useSelector(selectBalance);\n  console.log(balance);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newBalance = Number.parseFloat(\n      e.currentTarget.elements.balance.value\n    );\n    console.log(newBalance);\n    dispatch(addBalance({ newBalance }));\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <TextStyled>Balance:</TextStyled>\n      <StyledNumericFormat\n        required\n        name=\"balance\"\n        value={balance}\n        suffix=\" UAH\"\n        placeholder=\"00.00 UAH\"\n        onValueChange={(values, sourceInfo) => {\n          console.log(values, sourceInfo);\n        }}\n      />\n      <ButtonStyled type=\"submit\">Confirm</ButtonStyled>\n    </FormStyled>\n  );\n};\n\nexport default Balance;\n","const ReportsLink = () => {\n    return <span>Reports</span>;\n};\n\nexport default ReportsLink;","import Balance from \"components/Balance/Balance\";\nimport ReportsLink from \"components/ReportsLink/ReportsLink\";\nimport { NavLink } from \"react-router-dom\";\n\nconst HomeBar = () => {\n    return (\n        <section>\n            <Balance />\n            <NavLink to=\"/reports\">\n                <ReportsLink />\n            </NavLink>\n        </section>\n    );\n};\n\nexport default HomeBar;","import DatePicker from 'react-datepicker';\n\nimport Select from 'react-select';\nimport styled from '@emotion/styled';\n\nexport const WrapStyled = styled.div`\n  display: flex;\n  gap: 32px;\n  align-items: center;\n  padding: 32px 0 60px;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n`;\n\nexport const CalendarBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const DatePickerStyled = styled(DatePicker)`\n  width: 100%;\n  padding: 10px;\n  margin: 0;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 900;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  color: #c7ccdc;\n\n  &.react-datepicker-wrapper {\n    width: 70px;\n  }\n`;\n\nexport const SelectStyled = styled(Select)`\n  width: 170px;\n  height: 46px;\n  font-size: 12px;\n  color: rgba(199, 204, 220, 0.5);\n  background: transparent;\n\n  &.react-select-container {\n    background-color: blue;\n    fill: red;\n    color: black;\n  }\n`;\n\nexport const InputStyled = styled.input`\n  height: 40px;\n  color: rgba(199, 204, 220, 0.5);\n  background: transparent;\n  border: 2px solid #474759;;\n`;\n\nexport const BtnStyled = styled.button`\n  width: 136px;\n  height: 44px;\n  margin-left: 16px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17x;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: #ffffff;\n  background: linear-gradient(\n    115.74deg,\n    #383847 23.54%,\n    rgba(56, 56, 71, 0.29) 107.94%\n  );\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n  border: 2px solid #474759;\n  border-radius: 16px;\n\n  &:first-of-type {\n    margin-left: 32px;\n    background: #42a652;\n    box-shadow: 1px 3px 5px rgba(96, 196, 112, 0.35);\n    border: none;\n    border-radius: 16px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport {\n  addTransactionExpense,\n  addTransactionIncome,\n} from 'redux/transaction/transactionOperations';\nimport {\n  FormStyled,\n  WrapStyled,\n  BtnStyled,\n  SelectStyled,\n  DatePickerStyled,\n  CalendarBox,\n  InputStyled,\n} from './AddTransaction.styled';\nimport { selectionExpenses, selectionIncome } from 'shared/category';\nimport { getFilterDate } from 'redux/transaction/transactionSlice';\n\nconst AddTransaction = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const expenses = params.expenses;\n\n  const [options, setOptions] = useState([]);\n\n  const [startDate, setStartDate] = useState(new Date());\n  const curDate = startDate.toISOString().split('T')[0];\n\n  const [form, setForm] = useState({\n    date: '',\n    amount: 0,\n    description: '',\n    category: '',\n  });\n\n  useEffect(() => {\n    expenses !== 'income'\n      ? setOptions(selectionExpenses)\n      : setOptions(selectionIncome);\n  }, [expenses]);\n\n  const handleChange = e => {\n    let { name, value } = e.target;\n    if (name === 'amount') value = Number(value);\n    setForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('form', form, curDate);\n    expenses !== 'income'\n      ? dispatch(addTransactionExpense(form))\n      : dispatch(addTransactionIncome(form));\n    setForm('');\n  };\n\n  useEffect(() => {\n    setForm(prev => ({ ...prev, date: curDate }));\n    console.log('add', curDate);\n    dispatch(getFilterDate(curDate));\n  }, [curDate, dispatch]);\n\n  return (\n    <WrapStyled>\n      <CalendarBox>\n        <CalendarMonthIcon color=\"success\" />\n        <DatePickerStyled\n          selected={startDate}\n          onChange={date => setStartDate(date)}\n          maxDate={new Date()}\n          name=\"date\"\n        />\n      </CalendarBox>\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Product description\"\n          onChange={handleChange}\n        />\n        <SelectStyled\n          options={options}\n          placeholder=\"Product category\"\n          // styles={{\n          //   control: (baseStyles, state) => ({\n          //     ...baseStyles,\n          //     border: '2px solid #474759',\n          //     background: 'transparent',\n          //   }),\n          // }}\n          name=\"category\"\n          onChange={data =>\n            setForm(prev => ({ ...form, category: data.trans }))\n          }\n        />\n        <InputStyled\n          type=\"number\"\n          placeholder=\"0.00\"\n          name=\"amount\"\n          onChange={handleChange}\n        />\n        <BtnStyled type=\"submit\">Input</BtnStyled>\n        <BtnStyled type=\"reset\">Clear</BtnStyled>\n      </FormStyled>\n    </WrapStyled>\n  );\n};\n\nexport default AddTransaction;\n","import styled from '@emotion/styled';\n\nexport const WrapperStyled = styled.div`\n  width: 213px;\n  height: 280px;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  background-color: rgba(86, 86, 107, 0.5);\n`;\n\nexport const TextStyled = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 12px 0;\n  width: 100%;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.16;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #f6f7fb;\n  //border-bottom: 4px solid #56566b;\n`;\n\nexport const DivStyled = styled.div`\n  width: 100%;\n  height: 242px;\n  overflow: hidden auto;\n  &::-webkit-scrollbar {\n    display: block;\n    //height: 82px;\n    width: 6px;\n    -webkit-appearance: none;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    //height: 82px;\n    background-color: #60c470;\n  }\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  &::-webkit-scrollbar-track-piece:end {\n    background-color: transparent;\n    margin-bottom: 2px;\n  }\n  &::-webkit-scrollbar-track-piece:start {\n    background-color: transparent;\n    margin-top: 2px;\n  }\n`;\n\nexport const ListStyled = styled.ul`\n  height: 280px;\n  padding-left: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding-top: 12px;\n  padding-bottom: 12px;\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  color: #c7ccdc;\n  border-bottom: 2px solid #383847;\n\n  &:first-of-type {\n    border-top: 4px solid #383847;\n  }\n`;\n\nexport const MonthStyled = styled.span`\n  padding-left: 12px;\n`;\n\nexport const SumStyled = styled.span`\n  padding-right: 12px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectMonthExpenses,\n  selectMonthIncome,\n} from 'redux/transaction/transactionSelectors';\nimport {\n  getTransactionExpense,\n  getTransactionIncome,\n} from 'redux/transaction/transactionOperations';\nimport {\n  WrapperStyled,\n  TextStyled,\n  DivStyled,\n  ListStyled,\n  ListItem,\n  MonthStyled,\n  SumStyled,\n} from './Summary.styled';\n\nconst Summary = ({ type = 'expense' }) => {\n  let conditionalSelect = null;\n  const monthExpenses = useSelector(selectMonthExpenses);\n  const monthIncome = useSelector(selectMonthIncome);\n\n  type === 'expense'\n    ? (conditionalSelect = monthExpenses)\n    : (conditionalSelect = monthIncome);\n\n  const sumValues = Object.values(conditionalSelect);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    type === 'expense'\n      ? dispatch(getTransactionExpense())\n      : dispatch(getTransactionIncome());\n  }, [dispatch, type]);\n\n  const currentMonth = new Date().getMonth();\n  const monthEng = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  return (\n    <WrapperStyled>\n      <TextStyled>Summary</TextStyled>\n      <DivStyled>\n        <ListStyled>\n          {sumValues.map(\n            (sum, idx) =>\n              idx <= currentMonth && (\n                <ListItem key={monthEng[idx]}>\n                  <MonthStyled>{monthEng[idx]}</MonthStyled>\n                  <SumStyled>{sum}</SumStyled>\n                </ListItem>\n              )\n          )}\n        </ListStyled>\n      </DivStyled>\n    </WrapperStyled>\n  );\n};\n\nexport default Summary;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavLinkStyled = styled(NavLink)`\n  display: block;\n  width: 138px;\n  padding: 12px 0;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-decoration: none;\n  text-align: center;\n  background: linear-gradient(245.22deg, #383847 14.1%, #2d2d38 89.51%);\n  border-top-right-radius: 20px;\n  border-top-left-radius: 20px;\n  border: none;\n  color: #f6f7fb;\n\n  &.active {\n    background: #383847;\n  }\n  &:first-of-type {\n    color: #60c470;\n  }\n`;\n\nexport const WrapStyled =styled.div`\n    display: flex;\n`\n","import { NavLinkStyled, WrapStyled } from \"./TransactionTypeTabs.styled\";\n\nconst TransactionTypeTabs = () => {\n    return (\n      <WrapStyled>\n          <NavLinkStyled to=\"expenses\">EXPENSES</NavLinkStyled>\n          <NavLinkStyled to=\"income\">INCOME</NavLinkStyled>\n        </WrapStyled>\n        \n    );\n};\n\nexport default TransactionTypeTabs;","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { selectFilterDate } from 'redux/transaction/transactionSelectors';\n\nconst TransactionsList = () => {\n  const params = useParams();\n  const expenses = params.expenses;\n  const transactionExpenses = useSelector(state => state.transaction.expenses);\n  const transactionIncomes = useSelector(state => state.transaction.incomes);\n  const dateFilter = useSelector(selectFilterDate);\n  let transaction;\n\n  console.log('dateFilter', dateFilter);\n\n  expenses === 'income'\n    ? (transaction = transactionIncomes.filter(el => el.date === dateFilter))\n    : (transaction = transactionExpenses.filter(el => el.date === dateFilter));\n\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));\n\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n  }));\n\n  return (\n    <TableContainer component={Paper} style={{ width: 'fit-content' }}>\n      <Table sx={{ width: 746 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>DATE</StyledTableCell>\n            <StyledTableCell align=\"right\">DESCRIPTION</StyledTableCell>\n            <StyledTableCell align=\"right\">CATEGORY</StyledTableCell>\n            <StyledTableCell align=\"right\">SUM</StyledTableCell>\n            <StyledTableCell align=\"right\"></StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {transaction.map(row => (\n            <StyledTableRow key={row._id}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.date}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.description}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.category}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.amount}</StyledTableCell>\n              <StyledTableCell align=\"right\"></StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default TransactionsList;\n","import styled from '@emotion/styled';\n\nexport const SectionStyled = styled.section`\n  width: 1128px;\n  margin: 0 auto;\n  padding-left: 15px;\n`;\n\nexport const ContainerStyled = styled.div`\n  padding: 32px 32px 40px 34px;\n  background: linear-gradient(\n    115.74deg,\n    #383847 23.54%,\n    rgba(56, 56, 71, 0.29) 107.94%\n  );\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n`;\n\nexport const BoxStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n","import AddTransaction from \"components/AddTransaction/AddTransaction\";\nimport Summary from \"components/Summary/Summary\";\nimport TransactionTypeTabs from \"components/TransactionTypeTabs/TransactionTypeTabs\";\nimport TransactionsList from \"components/TransactionsList/TransactionsList\";\nimport { BoxStyled, ContainerStyled, SectionStyled } from \"./TransactionContainer.styled\";\n\nconst TransactionContainer = () => {\n    return (\n        <SectionStyled>\n            <TransactionTypeTabs />\n            <ContainerStyled>\n                <AddTransaction />\n                <BoxStyled>\n                    <TransactionsList />\n                    <Summary />\n                </BoxStyled>\n            </ContainerStyled>\n        </SectionStyled>\n    );\n};\n\nexport default TransactionContainer;","import HomeBar from 'components/HomeBar/HomeBar';\nimport TransactionContainer from 'components/TransactionContainer/TransactionContainer';\nimport { generatePath } from 'react-router-dom';\n\nconst Home = () => {\n  generatePath('/home/category', {category: \"expenses\"});\n  return (\n    <section>\n      <HomeBar />\n      <TransactionContainer />\n    </section>\n  );\n};\n\nexport default Home;\n","export const selectionExpenses = [\n  { value: 'products', label: 'Products', trans: 'Продукты' },\n  { value: 'alcohol', label: 'Alcohol', trans: 'Алкоголь' },\n  { value: 'entertainment', label: 'Entertain', trans: 'Развлечения' },\n  { value: 'health', label: 'Health', trans: 'Здоровье' },\n  { value: 'transport', label: 'Transport', trans: 'Транспорт' },\n  { value: 'housing', label: 'Housing', trans: 'Всё для дома' },\n  { value: 'hobbies', label: 'Sports, hobbies', trans: 'Спорт и хобби' },\n  { value: 'technique', label: 'Technique', trans: 'Техника' },\n  {\n    value: 'communal',\n    label: 'Communal, communication',\n    trans: 'Коммуналка и связь',\n  },\n  { value: 'education', label: 'Education', trans: 'Образование' },\n  { value: 'other', label: 'Other', trans: 'Прочее' },\n];\n\nexport const selectionIncome = [\n  { value: 'salary', label: 'Salary', trans: 'З/П' },\n  { value: 'income', label: 'Add. Income', trans: 'Доп. доход' },\n];\n"],"names":["FormStyled","styled","TextStyled","ButtonStyled","StyledNumericFormat","NumericFormat","balance","useSelector","selectBalance","console","log","dispatch","useDispatch","onSubmit","e","preventDefault","newBalance","Number","parseFloat","currentTarget","elements","value","addBalance","required","name","suffix","placeholder","onValueChange","values","sourceInfo","type","Balance","NavLink","to","WrapStyled","CalendarBox","DatePickerStyled","DatePicker","SelectStyled","Select","InputStyled","BtnStyled","expenses","useParams","useState","options","setOptions","Date","startDate","setStartDate","curDate","toISOString","split","date","amount","description","category","form","setForm","useEffect","selectionExpenses","selectionIncome","handleChange","target","prev","getFilterDate","CalendarMonth","color","selected","onChange","maxDate","addTransactionExpense","addTransactionIncome","data","trans","WrapperStyled","DivStyled","ListStyled","ListItem","MonthStyled","SumStyled","conditionalSelect","monthExpenses","selectMonthExpenses","monthIncome","selectMonthIncome","sumValues","Object","getTransactionExpense","getTransactionIncome","currentMonth","getMonth","monthEng","map","sum","idx","NavLinkStyled","transaction","transactionExpenses","state","transactionIncomes","incomes","dateFilter","selectFilterDate","filter","el","StyledTableCell","TableCell","theme","tableCellClasses","backgroundColor","palette","common","black","white","fontSize","StyledTableRow","TableRow","action","hover","border","TableContainer","component","Paper","style","width","Table","sx","TableHead","align","TableBody","row","scope","_id","SectionStyled","ContainerStyled","BoxStyled","generatePath","label"],"sourceRoot":""}
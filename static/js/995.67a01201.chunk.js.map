{"version":3,"file":"static/js/995.67a01201.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginRegistration/LoginRegistration.styled.jsx","pages/LoginRegistration/LoginRegistration.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  @media screen and (min-width: 1281px) {\n    margin: 120px 150px 0px 125px;\n\n    max-width: 392px;\n    padding: 52px;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1281px) {\n    padding: 52px;\n    margin: 0 auto;\n    margin-top: 294px;\n  }\n  @media screen and (min-width: 320px) and (max-width: 480px) {\n    margin: 12px auto;\n    max-width: 280px;\n    width: 100%;\n    padding: 32px 20px;\n  }\n  @media screen and (min-width: 480px) and (max-width: 767px) {\n    /* margin: 50px auto; */\n    max-width: 280px;\n    min-width: 280px;\n    margin-top: 12px;\n    padding: 32px 20px;\n  }\n  box-shadow: inset 0px 2px 14px rgba(132, 132, 132, 0.2);\n  border-radius: 30px;\n  padding: 40px 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #383847;\n  filter: drop-shadow(0px 4px 40px rgba(0, 0, 0, 0.25));\n`;\nexport const Title = styled.h1`\n  color: #f6f7fb;\n  width: 218px;\n  height: 38px;\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 19px;\n  text-align: center;\n  letter-spacing: 0.04em;\n`;\nexport const GoggleLink = styled.a`\n  margin-top: 20px;\n  padding: 10px 20px;\n  border-radius: 16px;\n  font-weight: 500;\n  text-decoration: none;\n  display: flex;\n  gap: 10px;\n  color: black;\n  background-color: #f6f7fb;\n  &:hover {\n    background-color: #dddddd;\n    transition: all 300ms ease 0s;\n  }\n  margin-bottom: 32px;\n  @media screen and (min-width: 320px) and (max-width: 500px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const Subtitle = styled.h2`\n  width: 288px;\n  color: #f6f7fb;\n  height: 32px;\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.04em;\n  margin-bottom: 20px;\n  @media screen and (min-width: 320px) and (max-width: 500px) {\n    max-width: 240px;\n    text-align: start;\n    margin: 0;\n    font-size: 12px;\n  }\n`;\nexport const LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 40px;\n`;\nexport const Label = styled.label`\n\n  color: #f6f7fb;\n  font-weight: 200;\n  font-size: 14px;\n  line-height: 14px;\n  letter-spacing: 0.04em;\n  text-align: start;\n  @media screen and (min-width: 320px) and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;;\n    justify-content: flex-start;\n  }\n`;\nexport const LabelTitle = styled.p`\n  margin: 12px 10px 8px;\n  text-align: start;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  width: 288px;\n  padding: 16px 16px;\n  background: #f6f7fb;\n  border-radius: 16px;\n  border: none;\n  box-shadow: 1px 3px 5px rgba(21, 23, 21, 0.656);\n  @media screen and (min-width: 320px) and (max-width: 768px) {\n    width: 100%;\n    width: 240px;\n  }\n`;\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  justify-content: center;\n`;\nexport const LoginButton = styled.button`\n  background: #42a652;\n  box-shadow: 1px 3px 5px rgba(96, 196, 112, 0.35);\n  border-radius: 16px;\n  border: none;\n  width: 136px;\n  height: 44px;\n  margin-top: -15px;\n\n  cursor: pointer;\n  &:hover {\n    background-color: #308e3f;\n    transition: all 300ms ease 0s;\n  }\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #ffffff;\n  @media screen and (min-width: 320px) and (max-width: 480px) {\n    width: 116px;\n    height: 38px;\n  }\n`;\nexport const RegisterButton = styled.button`\n  background: #f5f6fb;\n\n  box-shadow: 0px 4px 7px rgba(0, 0, 0, 0.25);\n  border-radius: 15px;\n  border: none;\n  width: 136px;\n  height: 44px;\n  margin-top: -15px;\n  cursor: pointer;\n  &:hover {\n    background-color: #dddddd;\n    transition: all 300ms ease 0s;\n  }\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #1f1f27;\n  @media screen and (min-width: 320px) and (max-width: 480px) {\n    width: 116px;\n    height: 38px;\n  }\n`;\n\nexport const Required = styled.p`\n  color: #fe4566;\n  font-size: 10px;\n`;\n\nexport const ContainerStyled = styled.div`\nmax-width: 100%;\ndisplay: flex;\n  @media screen and (min-width: 480px) {\n    max-width: 320px;\n    width: 100%;\nmargin: 0 auto;\njustify-content: center;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n    margin: 0 auto;\n    width: unset;\n\n  }\n  @media screen and (min-width: 1281px) {\n    max-width: 1098px;\n    justify-content: flex-end;\n    margin: 0;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { loginUser, registerUser } from 'redux/auth/authOperations';\nimport {\n  ContainerStyled,\n  FormWrapper,\n  Title,\n  GoggleLink,\n  Subtitle,\n  Label,\n  Input,\n  ButtonWrapper,\n  LabelTitle,\n  LabelWrapper,\n  LoginButton,\n  RegisterButton,\n  Required,\n} from './LoginForm.styled';\nimport { FcGoogle } from 'react-icons/fc';\nimport { useState } from 'react';\nimport { selectAuthError } from 'redux/auth/authSelectors';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst LoginForm = () => {\n  const [inputPassword, setInputPassword] = useState('');\n  const [inputName, setInputName] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const dispatch = useDispatch();\n  const error = useSelector(selectAuthError);\n\n  toast.error(error, {\n    position: \"top-left\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"light\",\n    });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsSubmitted(true);\n    const formValues = {\n      email: inputName,\n      password: inputPassword,\n    };\n    const submit = event.nativeEvent.submitter.name;\n    if (inputPassword && inputName)\n      submit === 'login'\n        ? dispatch(loginUser(formValues))\n        : dispatch(registerUser(formValues));\n  };\n  const handleChangePassword = event => {\n    const inputValue = event.target.value;\n    setInputPassword(inputValue);\n  };\n  const handleChangeName = event => {\n    const inputValue = event.target.value;\n    setInputName(inputValue);\n  };\n\n  return (\n    <>\n    {error && \n    <ToastContainer\n    position=\"top-right\"\n    autoClose={5000}\n    limit={1}\nhideProgressBar={false}\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\ntheme=\"dark\"\n/>}\n      <ContainerStyled>\n        <FormWrapper>\n          <Title>You can log in with your Google Account:</Title>\n          <GoggleLink href=\"https://kapusta-backend.goit.global/auth/google\">\n            <FcGoogle size={18} />\n            Google\n          </GoggleLink>\n          <form onSubmit={handleSubmit}>\n            <Subtitle>\n              Or log in using an email and password, after registering:\n            </Subtitle>\n            <LabelWrapper>\n              <Label>\n                <LabelTitle>\n                  {inputName.length === 0 && isSubmitted && (\n                    <span style={{ color: '#FE4566' }}>&#42;</span>\n                  )}\n                  Email:\n                </LabelTitle>\n                <Input\n                  onChange={handleChangeName}\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"your@email.com\"\n                />\n                {inputName.length === 0 && isSubmitted && (\n                  <Required>This is a required field</Required>\n                )}\n              </Label>\n              <Label>\n                <LabelTitle>\n                  {inputPassword.length === 0 && isSubmitted && (\n                    <span style={{ color: '#FE4566' }}>&#42;</span>\n                  )}\n                  {inputPassword.length > 1 && inputPassword.length && (\n                    <span style={{ color: '#FE4566' }}>&#42;</span>\n                  )}\n                  Password:\n                </LabelTitle>\n                <Input\n                  onChange={handleChangePassword}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"your password\"\n                />\n                {inputPassword.length === 0 && isSubmitted && (\n                  <Required>This is a required field</Required>\n                )}\n                {inputPassword.length > 1 && inputPassword.length < 8 && (\n                  <Required>Password must be at least 8 characters</Required>\n                )}\n              </Label>\n            </LabelWrapper>\n            <ButtonWrapper>\n              <LoginButton name=\"login\" type=\"submit\">\n                Log in\n              </LoginButton>\n              <RegisterButton name=\"register\" type=\"submit\">\n                Registration\n              </RegisterButton>\n            </ButtonWrapper>\n          </form>\n        </FormWrapper>\n      </ContainerStyled>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import styled from \"@emotion/styled\";\n\nexport const FormWrapper = styled.div `\n\n    @media screen and (min-width: 1280px) {\n      width: 100%;\n      display: flex;\n      justify-content: flex-end;\n    }\n    @media screen and (min-width: 768px) and (max-width: 1279px) {\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      gap: 150px;\n    }\n\n     @media screen and (min-width: 320px) and (max-width: 500px){\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`\nexport const Image = styled.img`\n  position: relative;\n  width: 675px;\n  height: 544px;\n   @media screen and (max-width: 1279px) {\n      display: none;\n   }\n`;","import LoginForm from 'components/LoginForm/LoginForm';\nimport { FormWrapper } from 'pages/LoginRegistration/LoginRegistration.styled.jsx';\n\nconst LoginRegistration = () => {\n  return (\n    <FormWrapper>\n      <LoginForm />\n    </FormWrapper>\n  );\n};\n\n\nexport default LoginRegistration;\n"],"names":["FormWrapper","styled","Title","GoggleLink","Subtitle","LabelWrapper","Label","LabelTitle","Input","ButtonWrapper","LoginButton","RegisterButton","Required","ContainerStyled","useState","inputPassword","setInputPassword","inputName","setInputName","isSubmitted","setIsSubmitted","dispatch","useDispatch","error","useSelector","selectAuthError","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","limit","newestOnTop","rtl","pauseOnFocusLoss","href","size","onSubmit","event","preventDefault","formValues","email","password","submit","nativeEvent","submitter","name","loginUser","registerUser","length","style","color","onChange","inputValue","target","value","type","placeholder"],"sourceRoot":""}
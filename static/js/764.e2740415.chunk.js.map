{"version":3,"file":"static/js/764.e2740415.chunk.js","mappings":"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","sources":["components/ReportsLink/ReportsLink.styled.jsx","components/ReportsLink/ReportsLink.jsx","components/HomeBar/HomeBar.styled.jsx","components/HomeBar/HomeBar.jsx","components/AddTransaction/AddTransaction.styled.jsx","components/AddTransaction/AddTransactionStyle.js","components/AddTransaction/AddTransaction.jsx","components/Summary/Summary.styled.jsx","components/Summary/Summary.jsx","components/TransactionTypeTabs/TransactionTypeTabs.styled.jsx","components/TransactionTypeTabs/TransactionTypeTabs.jsx","components/TransactionsList/TransactionsList.styled.jsx","components/TransactionsList/TransactionsList.jsx","components/TransactionContainer/TransactionContainer.styled.jsx","components/TransactionContainer/TransactionContainer.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\n\nexport const WrapperStyled = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 15px;\n`;\n\nexport const TextStyled = styled.span`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  text-align: right;\n  letter-spacing: 0.04em;\n  color: rgba(199, 204, 220, 0.5);\n`;\n\nexport const IconStyled = styled(EqualizerIcon)`\n  width: 24px;\n  height: 24px;\n  color: #c7ccdc;\n`;\n","//import EqualizerIcon from '@mui/icons-material/Equalizer';\nimport { WrapperStyled, TextStyled, IconStyled } from './ReportsLink.styled';\n\nconst ReportsLink = () => {\n  return (\n    <WrapperStyled>\n      <TextStyled>Reports</TextStyled>\n      <IconStyled />\n    </WrapperStyled>\n  );\n};\n\nexport default ReportsLink;\n","import styled from '@emotion/styled';\n\nexport const WrapperStyled = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  gap: 30px;\n  margin: 16px 0 40px 0;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    gap: 20px;\n    width: 704px;\n    padding-left: 38px;\n    margin: 40px auto 60px auto;\n  }\n  @media (min-width: 1440px) {\n    width: 1094px;\n    margin-bottom: 10px;\n  }\n`;\n","import Balance from 'components/Balance/Balance';\nimport ReportsLink from 'components/ReportsLink/ReportsLink';\nimport { NavLink } from 'react-router-dom';\nimport { WrapperStyled } from './HomeBar.styled';\n\nconst HomeBar = () => {\n  return (\n    <section>\n      <WrapperStyled>\n        <Balance />\n        <NavLink to=\"/reports\">\n          <ReportsLink />\n        </NavLink>\n      </WrapperStyled>\n    </section>\n  );\n};\n\nexport default HomeBar;\n","import DatePicker from 'react-datepicker';\nimport styled from '@emotion/styled';\n\nexport const WrapStyled = styled.div`\n  display: flex;\n  gap: 32px;\n  align-items: center;\n  padding-bottom: 60px;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n`;\n\nexport const CalendarBox = styled.div`\n  display: flex;\n  align-items: center;\n  width: 104px;\n`;\n\nexport const DatePickerStyled = styled(DatePicker)`\n  width: 100%;\n  padding: 10px;\n  margin: 0;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 900;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  color: #c7ccdc;\n\n  &.react-datepicker-wrapper {\n    width: 70%;\n  }\n  \n  &.react-datepicker__input-container {\n    width: 70%;\n  }\n\n  & div {\n    width: 70%;\n  }\n`;\n\nexport const InputStyled = styled.input`\n  height: 40px;\n  padding-left: 20px;\n  color: rgba(199, 204, 220, 0.5);\n  background: transparent;\n  border: 2px solid #474759;\n  font-family: \"Roboto\";\n  font-weight: 900;\n  font-size: 12px;\n  line-height: 1.17;\n\n  &:first-of-type {\n    border-top-left-radius: 16px;\n  }\n  &:last-of-type {\n    border-top-right-radius: 16px;\n    border-bottom-right-radius: 16px;\n  }\n`;\n\nexport const BtnStyled = styled.button`\n  width: 136px;\n  height: 44px;\n  margin-left: 16px;\n  /* font-family: 'Roboto';\n  font-style: normal; */\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17x;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #ffffff;\n  background: linear-gradient(\n    115.74deg,\n    #383847 23.54%,\n    rgba(56, 56, 71, 0.29) 107.94%\n  );\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n  border: 2px solid #474759;\n  border-radius: 16px;\n\n  &:first-of-type {\n    margin-left: 32px;\n    background: #42a652;\n    box-shadow: 1px 3px 5px rgba(96, 196, 112, 0.35);\n    border: none;\n    border-radius: 16px;\n  }\n\n  &:hover {\n    outline: 2px solid #c7ccdc;\n    background: rgba(66, 166, 83, 0.2);\n  }\n`;\n","export const objectStyle = {\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    '&:focus': { outline: 'none', border: 'none' },\n    '&:hover': { outline: 'none', border: '2px solid #474759' },\n    border: '2px solid #474759',\n    cursor: 'pointer',\n    background: 'transparent',\n    height: '46px',\n    width: '170px',\n    fontSize: '12px',\n    color: '#C7CCDC80',\n  }),\n  valueContainer: (baseStyles, state) => ({\n    ...baseStyles,\n    paddingTop: '4px',\n    paddingLeft: '20px',\n    // paddingBottom: \"15px\",\n  }),\n  indicatorSeparator: (baseStyles, state) => ({\n    ...baseStyles,\n    width: 0,\n  }),\n  dropdownIndicator: (baseStyles, state) => ({\n    ...baseStyles,\n    color: '#C7CCDC80',\n  }),\n  menu: (baseStyles, state) => ({\n    ...baseStyles,\n    background: '#383847',\n    cursor: 'pointer',\n    color: '#C7CCDC50',\n  }),\n  option: (baseStyles, state) => ({\n    '&:hover': { background: '#474759', color: '#F6F7FB' },\n    letterSpacing: '0.02em',\n    fontSize: '12px',\n    lineHeight: 1.17,\n    padding: '12px 18px',\n  }),\n  singleValue: (baseStyles, state) => ({\n    ...baseStyles,\n    color: '#C7CCDC50',\n  }),\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport Select from 'react-select';\nimport { NumericFormat } from 'react-number-format';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { registerLocale } from 'react-datepicker';\nimport uk from 'date-fns/locale/uk';\n\nimport {\n  addTransactionExpense,\n  addTransactionIncome,\n} from 'redux/transaction/transactionOperations';\nimport {\n  FormStyled,\n  WrapStyled,\n  BtnStyled,\n  DatePickerStyled,\n  CalendarBox,\n  InputStyled,\n} from './AddTransaction.styled';\nimport { selectionExpenses, selectionIncome } from 'shared/category';\nimport { getFilterDate } from 'redux/transaction/transactionSlice';\nimport { objectStyle } from './AddTransactionStyle';\nimport { selectBalance } from 'redux/transaction/transactionSelectors';\n\nconst AddTransaction = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const expenses = params.expenses;\n  \n  const [options, setOptions] = useState([]);\n  const [selected, setSelected] = useState([]);\n  \n  registerLocale('uk', uk);\n  const [startDate, setStartDate] = useState(new Date());\n  const curDate = startDate.toISOString().split('T')[0];\n\n  const balance = useSelector(selectBalance);\n\n  const [form, setForm] = useState({\n    date: '',\n    amount: '',\n    description: '',\n    category: '',\n  });\n\n  useEffect(() => {\n    expenses !== 'income'\n      ? setOptions(selectionExpenses)\n      : setOptions(selectionIncome);\n  }, [expenses]);\n\n  const handleChange = e => {\n    let { name, value } = e.target;\n    if (name === 'amount') value = Number(value);\n    setForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log('form', form, curDate);\n    expenses !== 'income'\n      ? dispatch(addTransactionExpense(form))\n      : dispatch(addTransactionIncome(form));\n    setForm('');\n  };\n\n  const handleClickReset = () => {\n    setForm(prev => ({ ...prev, amount: '', category: '' }));\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    setForm(prev => ({ ...prev, date: curDate }));\n    dispatch(getFilterDate(curDate));\n  }, [curDate, dispatch]);\n\n  useEffect(() => {\n    dispatch(getFilterDate(''));\n  }, [dispatch]);\n\n  console.log('form', form, balance, selected);\n\n  return (\n    <WrapStyled>\n      <CalendarBox>\n        <CalendarMonthIcon color=\"success\" />\n        <DatePickerStyled\n          locale=\"uk\"\n          selected={startDate}\n          onChange={date => setStartDate(date)}\n          maxDate={new Date()}\n          name=\"date\"\n        />\n      </CalendarBox>\n\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Product description\"\n          onChange={handleChange}\n        />\n\n        <Select\n          options={options}\n          placeholder=\"Product category\"\n          // value={selected}\n          styles={objectStyle}\n          name=\"category\"\n          onChange={data =>\n            setForm(prev => ({ ...form, category: data.trans }))\n          }\n        />\n\n        <NumericFormat\n          placeholder=\"0.00 UAH\"\n          value={form.amount}\n          allowNegative={false}\n          decimalScale={2}\n          allowedDecimalSeparators={['.']}\n          allowLeadingZeros={false}\n          thousandSeparator=\" \"\n          suffix=\" UAH\"\n          displayType=\"input\"\n          isAllowed={values => {\n            const { floatValue } = values;\n            return floatValue < balance && floatValue >= 1;\n          }}\n          onValueChange={({ floatValue }, sourceInfo) => {\n            setForm(prev => ({ ...prev, amount: floatValue }));\n          }}\n        />\n        <BtnStyled type=\"submit\">Input</BtnStyled>\n        <BtnStyled type=\"reset\" onClick={handleClickReset}>\n          Clear\n        </BtnStyled>\n      </FormStyled>\n    </WrapStyled>\n  );\n};\n\nexport default AddTransaction;\n","import styled from '@emotion/styled';\n\nexport const WrapperStyled = styled.div`\n  width: 213px;\n  height: 280px;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  background-color: rgba(86, 86, 107, 0.5);\n`;\n\nexport const TextStyled = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 12px 0;\n  width: 100%;\n\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.16;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #f6f7fb;\n`;\n\nexport const DivStyled = styled.div`\n  width: 100%;\n  overflow: hidden auto;\n  &::-webkit-scrollbar {\n    display: block;\n    height: 82px;\n    width: 6px;\n    -webkit-appearance: none;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    background-color: #60c470;\n  }\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  &::-webkit-scrollbar-track-piece:end {\n    background-color: transparent;\n    margin-bottom: 2px;\n  }\n  &::-webkit-scrollbar-track-piece:start {\n    background-color: transparent;\n    margin-top: 2px;\n  }\n`;\n\nexport const ListStyled = styled.ul`\n  height: 280px;\n  padding-left: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding-top: 12px;\n  padding-bottom: 12px;\n  display: flex;\n  justify-content: space-between;\n\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  color: #c7ccdc;\n  border-bottom: 2px solid #383847;\n\n  &:first-of-type {\n    border-top: 4px solid #383847;\n  }\n`;\n\nexport const MonthStyled = styled.span`\n  padding-left: 12px;\n`;\n\nexport const SumStyled = styled.span`\n  padding-right: 12px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport {\n  selectMonthExpenses,\n  selectMonthIncome,\n  selectIncome,\n  selectExpenses,\n} from 'redux/transaction/transactionSelectors';\nimport {\n  getTransactionExpense,\n  getTransactionIncome,\n} from 'redux/transaction/transactionOperations';\nimport {\n  WrapperStyled,\n  TextStyled,\n  DivStyled,\n  ListStyled,\n  ListItem,\n  MonthStyled,\n  SumStyled,\n} from './Summary.styled';\n\nconst Summary = () => {\n  const params = useParams();\n  const expenses = params.expenses;\n\n  let conditionalSelect = null;\n  const monthExpenses = useSelector(selectMonthExpenses);\n  const monthIncome = useSelector(selectMonthIncome);\n  const transactionIncome = useSelector(selectIncome);\n  const transactionExpenses = useSelector(selectExpenses);\n\n  expenses === 'expenses'\n    ? (conditionalSelect = monthExpenses)\n    : (conditionalSelect = monthIncome);\n\n  const sumValues = Object.values(conditionalSelect);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    expenses === 'expenses'\n      ? monthExpenses.length === 0 && dispatch(getTransactionExpense())\n      : monthIncome.length === 0 && dispatch(getTransactionIncome());\n  }, [dispatch, expenses, transactionIncome, transactionExpenses, monthExpenses, monthIncome]);\n\n  const currentMonth = new Date().getMonth();\n  const monthEng = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  return (\n    <WrapperStyled>\n      <TextStyled>Summary</TextStyled>\n      <DivStyled>\n        <ListStyled>\n          {sumValues.map((sum, idx) => {\n            if (idx <= currentMonth) {\n              if (sum === 'N/A') {\n                sum = 0;\n              }\n              return (\n                <ListItem key={monthEng[idx]}>\n                  <MonthStyled>{monthEng[idx]}</MonthStyled>\n                  <SumStyled>{sum}</SumStyled>\n                </ListItem>\n              );\n            }\n            return null;\n          })}\n        </ListStyled>\n      </DivStyled>\n    </WrapperStyled>\n  );\n};\n\nexport default Summary;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavLinkStyled = styled(NavLink)`\n  display: block;\n  width: 138px;\n  padding: 12px 0;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-decoration: none;\n  text-align: center;\n  background: linear-gradient(5.22deg, #383847 14.1%, #2d2d38 89.51%);\n  border-top-right-radius: 20px;\n  border-top-left-radius: 20px;\n  border: none;\n  color: #f6f7fb;\n\n  &.active {\n    background: #383847;\n    color: #60c470;\n  }\n`;\n\nexport const WrapStyled = styled.div`\n  display: flex;\n`;\n","import { useState } from \"react\";\nimport { NavLinkStyled, WrapStyled } from \"./TransactionTypeTabs.styled\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\n\nconst TransactionTypeTabs = () => {\nconst [tabIndex, setTabIndex] = useState(0);\n\n  const handleSelect = (selectedIndex) => {\n    setTabIndex(selectedIndex);\n    // console.log(selectedIndex);\n  }\n\n  return (\n    <WrapStyled>\n      <Tabs selectedIndex={tabIndex} onSelect={handleSelect}>\n        <TabList>\n          <Tab><NavLinkStyled to=\"expenses\">EXPENSES</NavLinkStyled></Tab>\n          <Tab><NavLinkStyled to=\"income\">INCOME</NavLinkStyled></Tab>\n        </TabList>\n        <TabPanel />\n        <TabPanel />\n      </Tabs>\n    </WrapStyled>\n        \n  );\n};\n\nexport default TransactionTypeTabs;\n","import { HandySvg } from 'handy-svg';\nimport styled from 'styled-components';\n\nexport const ScrollWrapStyled = styled.div`\nmax-width: 58.3vw;\n  max-height: 360px;\n  overflow-x: hidden;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    display: block;\n    height: 82px;\n    width: 6px;\n    -webkit-appearance: none;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    background-color: #60c470;\n  }\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  &::-webkit-scrollbar-track-piece:end {\n    background-color: transparent;\n    margin-bottom: 2px;\n  }\n  &::-webkit-scrollbar-track-piece:start {\n    background-color: transparent;\n    margin-top: 2px;\n  }\n`;\n\nexport const TableStyled = styled.table`\n  width: 58.3vw;\n  table-layout: auto;\n  border-spacing: 0;\n`;\n\nexport const TableHeadRowStyled = styled.tr`\n  min-width: 746px;\n  height: 38px;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #f6f7fb;\n  background: rgba(86, 86, 107, 0.5);\n`;\n\nexport const TableHeadColumnStyled = styled.td`\n  padding: 12px 24px;\n  margin: 0;\n\n  &:first-child {\n    /* width: 20%; */\n    border-top-left-radius: 20px;\n  }\n  &:nth-child(2) {\n    /* width: 30%; */\n  }\n  &:nth-child(3) {\n    /* width: 25%; */\n  }\n  &:nth-child(4) {\n    /* width: 20%; */\n  }\n  &:last-child {\n    /* width: 5%; */\n    border-top-right-radius: 20px;\n  }\n  &:nth-child(n + 3) {\n    text-align: center;\n  }\n`;\n\nexport const TableRowStyled = styled.tr`\n  width: 100%;\n  height: 38px;\n  padding: 12px 24px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.17;\n  color: #c7ccdc;\n`;\n\nexport const TableColumnStyled = styled.td`\n  padding: 0 24px;\n  margin: 0;\n  border-bottom: 2px solid #474759;\n\n  &:first-child {\n    border-left: 2px solid #474759;\n  }\n  &:nth-child(n + 3) {\n    text-align: center;\n  }\n  &:nth-child(4) {\n    font-weight: 700;\n    color: #fe4566;\n  }\n  &[data-color='income'] {\n    color: #60c470;\n  }\n  &:last-child {\n    padding: 4px;\n    /* margin-top: 2px; */\n    border-right: 2px solid #474759;\n  }\n`;\n\nexport const BtnDelStyled = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  background: rgba(86, 86, 107, 0.1);\n  border-radius: 4px;\n\n  &:hover {\n    background: rgba(86, 86, 107, 0.5);\n  }\n`;\n\nexport const SvgStyled = styled(HandySvg)`\n  fill: rgba(199, 204, 220, 0.5);\n\n  &:hover {\n    fill: #f6f7fb;\n  }\n`;\n","import * as React from 'react';\nimport { useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterDate, selectIncome, selectExpenses } from 'redux/transaction/transactionSelectors';\n\nimport {\n  BtnDelStyled,\n  ScrollWrapStyled,\n  SvgStyled,\n  TableColumnStyled,\n  TableHeadColumnStyled,\n  TableHeadRowStyled,\n  TableRowStyled,\n  TableStyled,\n} from './TransactionsList.styled';\nimport { selectionExpenses, selectionIncome } from '../../shared/category';\nimport { delete as icon } from '../../images/Categories/index';\nimport { deleteTransaction } from 'redux/transaction/transactionOperations';\nimport { useMemo } from 'react';\n\nconst TransactionsList = () => {\n  const params = useParams();\n  const expenses = params.expenses;\n  const dispatch = useDispatch();\n  const transactionExpenses = useSelector(selectExpenses);\n  const transactionIncomes = useSelector(selectIncome);\n  const dateFilter = useSelector(selectFilterDate);\n  let transaction;\n  const categoryChange = [...selectionExpenses, ...selectionIncome];\n\n  const transactionIncome = useMemo(() => {\n    return transactionIncomes\n      .filter(el => el.date.includes(dateFilter))\n      .sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n  }, [dateFilter, transactionIncomes]);\n  const transactionExpense = useMemo(() => {\n    return transactionExpenses\n      .filter(el => el.date.includes(dateFilter))\n      .sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n  }, [dateFilter, transactionExpenses]);\n\n  expenses === 'income'\n    ? (transaction = transactionIncome)\n    : (transaction = transactionExpense);\n\n  // console.log('trans', transaction.length);\n\n  return (\n    <div>\n      <TableStyled>\n        <thead>\n        <TableHeadRowStyled>\n          <TableHeadColumnStyled>DATE</TableHeadColumnStyled>\n          <TableHeadColumnStyled>DESCRIPTION</TableHeadColumnStyled>\n          <TableHeadColumnStyled>CATEGORY</TableHeadColumnStyled>\n          <TableHeadColumnStyled>SUM</TableHeadColumnStyled>\n          <TableHeadColumnStyled></TableHeadColumnStyled>\n        </TableHeadRowStyled>\n        </thead>\n      </TableStyled>\n      <ScrollWrapStyled>\n        <TableStyled>\n          <tbody>\n            {transaction.map(el => (\n              <TableRowStyled key={el._id}>\n                <TableColumnStyled>{el.date}</TableColumnStyled>\n                <TableColumnStyled>{el.description}</TableColumnStyled>\n                <TableColumnStyled>\n                  {categoryChange\n                    .filter(({ value, label, trans }) => trans === el.category)\n                    .map(el => el.label)\n                    .join()}\n                </TableColumnStyled>\n                <TableColumnStyled data-color={expenses}>\n                  {expenses === 'income'\n                    ? el.amount.toFixed(2)\n                    : `-${el.amount.toFixed(2)}`}{' '}\n                  UAH.\n                </TableColumnStyled>\n                <TableColumnStyled>\n                  <BtnDelStyled\n                    type=\"button\"\n                    onClick={() => dispatch(deleteTransaction([el._id, expenses]))}\n                  >\n                    <SvgStyled src={icon} />\n                  </BtnDelStyled>\n                </TableColumnStyled>\n              </TableRowStyled>\n            ))}\n          </tbody>\n        </TableStyled>\n      </ScrollWrapStyled>\n    </div>\n  );\n};\n\nexport default TransactionsList;\n","import styled from '@emotion/styled';\n\nexport const SectionStyled = styled.section`\n   width: 85.8vw;\n   margin: 0 auto;\n   padding-left: 15px;\n   padding-right: 15px;\n`;\n\nexport const ContainerStyled = styled.div`\n  padding: 32px 32px 40px 34px;\n  background: linear-gradient(\n    115.74deg,\n    #383847 23.54%,\n    rgba(56, 56, 71, 0.29) 107.94%\n  );\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n`;\n\nexport const BoxStyled = styled.div`\n  display: flex;\n  /* gap: 75px; */\n  justify-content: space-between;\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport AddTransaction from 'components/AddTransaction/AddTransaction';\nimport Summary from 'components/Summary/Summary';\nimport TransactionTypeTabs from 'components/TransactionTypeTabs/TransactionTypeTabs';\nimport TransactionsList from 'components/TransactionsList/TransactionsList';\nimport {\n  BoxStyled,\n  ContainerStyled,\n  SectionStyled,\n} from './TransactionContainer.styled';\n\nconst TransactionContainer = () => {\n  const isTablet = useMediaQuery({ query: '(min-width: 768px)' });\n  return (\n    <SectionStyled>\n      <TransactionTypeTabs />\n      <ContainerStyled>\n        <AddTransaction />\n        <BoxStyled>\n          <TransactionsList />\n          {isTablet && <Summary />}\n        </BoxStyled>\n      </ContainerStyled>\n    </SectionStyled>\n  );\n};\n\nexport default TransactionContainer;\n","import HomeBar from 'components/HomeBar/HomeBar';\nimport TransactionContainer from 'components/TransactionContainer/TransactionContainer';\nimport { generatePath } from 'react-router-dom';\n\nconst Home = () => {\n  generatePath('/home/category', {category: \"expenses\"});\n  return (\n    <section>\n      <HomeBar />\n      <TransactionContainer />\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["WrapperStyled","styled","TextStyled","IconStyled","EqualizerIcon","Balance","NavLink","to","WrapStyled","FormStyled","CalendarBox","DatePickerStyled","DatePicker","InputStyled","BtnStyled","objectStyle","control","baseStyles","state","outline","border","cursor","background","height","width","fontSize","color","valueContainer","paddingTop","paddingLeft","indicatorSeparator","dropdownIndicator","menu","option","letterSpacing","lineHeight","padding","singleValue","dispatch","useDispatch","expenses","useParams","useState","options","setOptions","selected","setSelected","registerLocale","uk","Date","startDate","setStartDate","curDate","toISOString","split","balance","useSelector","selectBalance","date","amount","description","category","form","setForm","useEffect","selectionExpenses","selectionIncome","prev","getFilterDate","console","log","CalendarMonth","locale","onChange","maxDate","name","onSubmit","e","preventDefault","addTransactionExpense","addTransactionIncome","type","placeholder","target","value","Number","styles","data","trans","allowNegative","decimalScale","allowedDecimalSeparators","allowLeadingZeros","thousandSeparator","suffix","displayType","isAllowed","values","floatValue","onValueChange","sourceInfo","onClick","DivStyled","ListStyled","ListItem","MonthStyled","SumStyled","conditionalSelect","monthExpenses","selectMonthExpenses","monthIncome","selectMonthIncome","transactionIncome","selectIncome","transactionExpenses","selectExpenses","sumValues","Object","length","getTransactionExpense","getTransactionIncome","currentMonth","getMonth","monthEng","map","sum","idx","NavLinkStyled","tabIndex","setTabIndex","selectedIndex","onSelect","ScrollWrapStyled","TableStyled","TableHeadRowStyled","TableHeadColumnStyled","TableRowStyled","TableColumnStyled","BtnDelStyled","SvgStyled","HandySvg","transaction","transactionIncomes","dateFilter","selectFilterDate","categoryChange","useMemo","filter","el","includes","sort","a","b","parse","transactionExpense","label","join","toFixed","deleteTransaction","_id","src","icon","SectionStyled","ContainerStyled","BoxStyled","isTablet","useMediaQuery","query","generatePath"],"sourceRoot":""}
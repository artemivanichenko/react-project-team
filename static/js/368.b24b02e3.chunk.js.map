{"version":3,"file":"static/js/368.b24b02e3.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.jsx","components/Balance/Balance.jsx","components/ReportsLink/ReportsLink.styled.jsx","components/ReportsLink/ReportsLink.jsx","components/HomeBar/HomeBar.styled.jsx","components/HomeBar/HomeBar.jsx","components/AddTransaction/AddTransaction.styled.jsx","components/AddTransaction/AddTransactionStyle.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/AddTransaction/AddTransaction.jsx","components/Summary/Summary.styled.jsx","components/Summary/Summary.jsx","components/TransactionTypeTabs/TransactionTypeTabs.styled.jsx","components/TransactionTypeTabs/TransactionTypeTabs.jsx","images/sprite.svg","components/TransactionsList/TransactionsList.styled.jsx","components/TransactionsList/TransactionsList.jsx","components/TransactionContainer/TransactionContainer.styled.jsx","components/TransactionContainer/TransactionContainer.jsx","pages/Home/Home.jsx","shared/category.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NumericFormat } from 'react-number-format';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\n\nexport const TooltipStyled = styled(({ className, ...other }) => (\n  <Tooltip classes={{ tooltip: className }} {...other} />\n))`\n  && {\n    width: 268px;\n    height: 156px;\n    padding: 24px 32px;\n    border-radius: 30px;\n    box-sizing: border-box;\n\n    background: linear-gradient(118.06deg, #58bb67 3.05%, #368342 125.62%);\n    box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.25);\n\n    & .${tooltipClasses.arrow} {\n      &:before,\n      &:after {\n        background-color: #58bb67;\n      }\n    }\n  }\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 20px;\n    width: 334px;\n  }\n  @media (min-width: 1440px) {\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const TextStyled = styled.p`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.02em;\n  color: #c7ccdc;\n`;\n\nexport const BoxStyled = styled.div`\n  display: flex;\n  justify-content: center;\n\n  @media (min-width: 768px) {\n    gap: 16px;\n  }\n`;\n\nexport const StyledNumericFormat = styled(NumericFormat)`\n  width: 140px;\n  height: 44px;\n  box-sizing: border-box;\n  padding: 0 16px;\n\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.16;\n  text-align: end;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #f6f7fb;\n  background-color: transparent;\n  border: 2px solid #80848f;\n  border-top-left-radius: 16px;\n  border-bottom-left-radius: 16px;\n  &:hover,\n  :focus {\n    background-color: rgba(86, 86, 107, 0.3);\n  }\n\n  @media (min-width: 768px) {\n    width: 125px;\n    height: 44px;\n    padding: 12px 20px 12px 8px;\n    border-radius: 16px;\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  background-color: transparent;\n  border: 2px solid #80848f;\n  border-top-right-radius: 16px;\n  border-bottom-right-radius: 16px;\n  width: 140px;\n  height: 44px;\n  padding: 0 16px;\n\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-align: start;\n  color: #c7ccdc;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  &:hover,\n  :focus,\n  :active {\n    background-color: #42a652;\n    border: 2px solid #42a652;\n    color: #f6f7fb;\n  }\n\n  @media (min-width: 768px) {\n    width: 125px;\n    height: 44px;\n    border-radius: 16px;\n    text-align: center;\n  }\n`;\n\nexport const MessageStyled = styled.p`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.43;\n  color: #ffffff;\n  &:first-of-type {\n    margin-bottom: 24px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addBalance } from 'redux/transaction/transactionOperations';\nimport {\n  selectBalance,\n  selectExpenses,\n  selectIncome,\n} from 'redux/transaction/transactionSelectors';\nimport {\n  TooltipStyled,\n  FormStyled,\n  TextStyled,\n  BoxStyled,\n  ButtonStyled,\n  StyledNumericFormat,\n  MessageStyled,\n} from './Balance.styled';\n\nconst Balance = () => {\n  const [open, setOpen] = useState(false);\n  const [toggleOpen, setToggleOpen] = useState(true);\n  const [toggleClose, setToggleClose] = useState(true);\n  const [newBalance, setNewBalance] = useState(0);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const balance = useSelector(selectBalance);\n  const expenses = useSelector(selectExpenses);\n  const incomes = useSelector(selectIncome);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (newBalance > 0) {\n      dispatch(addBalance({ newBalance }));\n    }\n  }, [newBalance, dispatch]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setNewBalance(Number.parseFloat(e.currentTarget.elements.balance.value));\n    if (newBalance <= 0) {\n      return toast.warn('The balance should be positive!');\n    }\n  };\n\n  if (balance === 0 && toggleOpen && expenses.length === 0 && incomes.length === 0) {\n    handleOpen();\n    setToggleOpen(false);\n  }\n\n  if (balance !== 0 && toggleClose) {\n    handleClose();\n    setToggleClose(false);\n  }\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <TextStyled>Balance:</TextStyled>\n      <BoxStyled>\n        <TooltipStyled\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          disableFocusListener\n          disableHoverListener\n          disableTouchListener\n          title={\n            <>\n              <MessageStyled>\n                Hello! To get started, enter the current balance of your\n                account!\n              </MessageStyled>\n              <MessageStyled>\n                You can't spend money until you have it :)\n              </MessageStyled>\n            </>\n          }\n          arrow\n          placement=\"bottom-end\"\n        >\n          <div>\n            <StyledNumericFormat\n              required\n              decimalScale={2}\n              fixedDecimalScale\n              //type=\"number\"\n              minLength={1}\n              maxLength={17}\n              value={balance}\n              suffix=\" UAH\"\n              placeholder=\"00.00 UAH\"\n              name=\"balance\"\n              onValueChange={(values, sourceInfo) => {\n                // console.log(values, sourceInfo);\n              }}\n            />\n          </div>\n        </TooltipStyled>\n        <ButtonStyled type=\"submit\">Confirm</ButtonStyled>\n      </BoxStyled>\n      {newBalance <= 0 && (\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          theme=\"dark\"\n        />\n      )}\n    </FormStyled>\n  );\n};\n\nexport default Balance;\n","import styled from '@emotion/styled';\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\n\nexport const WrapperStyled = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 15px;\n`;\n\nexport const TextStyled = styled.span`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  text-align: right;\n  letter-spacing: 0.04em;\n  color: rgba(199, 204, 220, 0.5);\n`;\n\nexport const IconStyled = styled(EqualizerIcon)`\n  width: 24px;\n  height: 24px;\n  color: #c7ccdc;\n`;\n","//import EqualizerIcon from '@mui/icons-material/Equalizer';\nimport { WrapperStyled, TextStyled, IconStyled } from './ReportsLink.styled';\n\nconst ReportsLink = () => {\n  return (\n    <WrapperStyled>\n      <TextStyled>Reports</TextStyled>\n      <IconStyled />\n    </WrapperStyled>\n  );\n};\n\nexport default ReportsLink;\n","import styled from '@emotion/styled';\n\nexport const WrapperStyled = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  gap: 30px;\n  margin: 16px 0 40px 0;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    gap: 20px;\n    width: 704px;\n    padding-left: 38px;\n    margin: 40px auto 60px auto;\n  }\n  @media (min-width: 1440px) {\n    width: 1094px;\n    margin-bottom: 10px;\n  }\n`;\n","import Balance from 'components/Balance/Balance';\nimport ReportsLink from 'components/ReportsLink/ReportsLink';\nimport { NavLink } from 'react-router-dom';\nimport { WrapperStyled } from './HomeBar.styled';\n\nconst HomeBar = () => {\n  return (\n    <section>\n      <WrapperStyled>\n        <Balance />\n        <NavLink to=\"/reports\">\n          <ReportsLink />\n        </NavLink>\n      </WrapperStyled>\n    </section>\n  );\n};\n\nexport default HomeBar;\n","import DatePicker from 'react-datepicker';\nimport styled from '@emotion/styled';\nimport { NumericFormat } from 'react-number-format';\n\nexport const WrapStyled = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (min-width: 320px) and (max-width: 768px) {\n    flex-direction: column;\n    gap: 32px;\n    justify-content: center;\n\n  }\n  @media screen and (min-width: 768px) {\n    align-items: flex-start;\n    flex-wrap: nowrap;\n    gap: 32px;\n    margin-bottom: 48px;\n  }\n  @media screen and (min-width: 1280px) {\n    align-items: center;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const CalendarBox = styled.div`\n  display: flex;\n  align-items: center;\n  width: 102px;\n\n  @media screen and (min-width: 320px) and (max-width: 767px) {\n    margin: 0 auto;\n    padding-right: 7px;\n    margin-bottom: 64px;\n    width: 98px;\n  }\n  @media screen and (min-width: 768px) {\n    padding-top: 6px;\n    width: 94px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 0;\n    width: 98px;\n  }\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  @media screen and (max-width: 767px) {\n    flex-wrap: wrap;\n    justify-content: center;\n    padding: 32px 20px;\n\n  }\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n    flex-wrap: wrap;\n  }\n  @media screen and (min-width: 1280px) {\n    flex-wrap: nowrap;\n    width: 898px;\n  }\n`;\n\nexport const DatePickerStyled = styled(DatePicker)`\n  width: 170px;\n  padding: 10px;\n  margin: 0;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 900;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  color: #c7ccdc;\n\n  &.react-datepicker-wrapper {\n    width: 70%;\n  }\n\n  &.react-datepicker__input-container {\n    width: 70%;\n  }\n\n  & div {\n    width: 70%;\n  }\n`;\n\nexport const InputWrapStyled = styled.div`\n  display: flex;\n  @media (max-width: 767px){\n    flex-wrap: wrap;\n    width: 280px;\n    justify-content: center;\n  }\n \n`;\n\nexport const InputStyled = styled.input`\n  width: 280px;\n  height: 40px;\n  padding-left: 20px;\n  color: rgba(199, 204, 220, 0.5);\n  background: transparent;\n  border: 2px solid #474759;\n  font-family: 'Roboto';\n  font-weight: 900;\n  font-size: 12px;\n  line-height: 1.17;\n\n  &#shadow-root {\n    color: rgba(199, 204, 220, 0.5);\n  }\n  &:first-of-type {\n    border-top-left-radius: 16px;\n  }\n  &:last-of-type {\n    border-top-right-radius: 16px;\n    border-bottom-right-radius: 16px;\n  }\n\n  @media (max-width: 767px){\n    width: 280px;\n    border-top-left-radius: 20px;\n    border-top-right-radius: 20px;\n    height: 40px;\n    font-size: 12px;\n    font-weight: 400;\n\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 168px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 260px;\n  }\n`;\n\nexport const NumericFormatStyled = styled(NumericFormat)`\n  width: 125px;\n  padding-left: 10px;\n  color: #c7ccdc;\n  background: transparent;\n  border-top-right-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border: 2px solid #474759;\n\n  @media (max-width: 767px){\n    max-width: 183px;\n    border-radius: 22px;\n  margin-top: 32px;\n  margin-bottom: 80px;\n  height: 44px;\n  padding: 0px 40px;\n  }\n  \n  @media screen and (min-width: 768px) {\n    width: 116px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 116px;\n  }\n`;\n\nexport const BtnContainerStyled = styled.div`\n  display: flex;\n  gap: 20px;\n  @media screen and (min-width: 768px) {\n    padding-left: 40px;\n    gap: 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 0;\n  }\n`;\n\nexport const BtnStyled = styled.button`\n  width: 136px;\n  height: 44px;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17x;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #ffffff;\n  background: linear-gradient(\n    115.74deg,\n    #383847 23.54%,\n    rgba(56, 56, 71, 0.29) 107.94%\n  );\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n  border: 2px solid #474759;\n  border-radius: 16px;\n\n  &:first-of-type {\n    background: #42a652;\n    box-shadow: 1px 3px 5px rgba(96, 196, 112, 0.35);\n    border: none;\n    border-radius: 16px;\n  }\n\n  &:hover {\n    outline: 2px solid #c7ccdc;\n    background: rgba(66, 166, 83, 0.2);\n  }\n\n  &[data-mobile] {\n    background: linear-gradient(\n      115.74deg,\n      #383847 23.54%,\n      rgba(56, 56, 71, 0.29) 107.94%\n    );\n    box-shadow: none;\n    border: 2px solid #474759;\n    font-weight:300;\n    font-size:10px;\n  }\n`;\n","export const objectStyle = {\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    '&:focus': { outline: 'none', border: 'none' },\n    '&:hover': { outline: 'none', border: '2px solid #474759' },\n    border: '2px solid #474759',\n    cursor: 'pointer',\n    background: 'transparent',\n    height: '46px',\n    width: '170px',\n    fontSize: '12px',\n    color: '#C7CCDC80',\n    \"@media only screen and (max-width: 768px)\": {\nheight: '44px',\nwidth: '280px',\nborderRadius: '0px 0px 20px 0px',        },\n  }),\n  valueContainer: (baseStyles, state) => ({\n    ...baseStyles,\n    paddingTop: '4px',\n    paddingLeft: '20px',\n    // paddingBottom: \"15px\",\n  }),\n  indicatorSeparator: (baseStyles, state) => ({\n    ...baseStyles,\n    width: 0,\n  }),\n  dropdownIndicator: (baseStyles, state) => ({\n    ...baseStyles,\n    color: '#C7CCDC80',\n  }),\n  menu: (baseStyles, state) => ({\n    ...baseStyles,\n    background: '#383847',\n    cursor: 'pointer',\n    color: '#C7CCDC50',\n  }),\n  option: (baseStyles, state) => ({\n    '&:hover': { background: '#474759', color: '#F6F7FB' },\n    letterSpacing: '0.02em',\n    fontSize: '12px',\n    lineHeight: 1.17,\n    padding: '12px 18px',\n  }),\n  singleValue: (baseStyles, state) => ({\n    ...baseStyles,\n    color: '#C7CCDC50',\n  }),\n  container: (styles) => ({\n        ...styles,\n        \"@media only screen and (max-width: 768px)\": {\n            ...styles[\"@media only screen and (max-width: 768px)\"],\n    height: '44px',\n    width: '280px',\n    borderRadius: '30px',        },\n    }),\n};\n\n// {\n//   ...styles,\n//   '@media only screen and (max-width: 767px)': {\n//     height: '44px',\n//     width: '280px',\n//     borderRadius: '30px',\n//   },\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 56px;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  /* display: flex; */\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,);\n  z-index: 120;\n  @media screen and (max-width: 767px){\n    background: radial-gradient(\n      320px at left top,\n      rgba(176, 232, 185, 0.8),\n      rgba(56, 56, 71)\n    );\n  }\n`;\n\nexport const ModalBox = styled.div`\n  height: 350px;\n  width: 100vw;\n  background: linear-gradient(\n    115.74deg,\n    #383847 23.54%,\n    rgba(56, 56, 71, 0.29) 107.94%\n  );\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n`;\n\nexport const StyledBtn = styled.button`\n  margin: 16px 66px;\n  border: none;\n  outline: none;\n  background: transparent;\n  color: #f6f7fb;\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  font-weight: 700;\nfont-size: 12px;\n`;\n","import { createPortal } from 'react-dom';\nimport { ModalBox, Overlay, StyledBtn } from './Modal.styled';\nimport WestIcon from '@mui/icons-material/West';\n\n\nconst Modal = ({children, onClose}) => {\n  const modalRoot = document.querySelector('#root');\n\n  return createPortal(\n    <Overlay>\n        <StyledBtn type=\"button\" onClick={onClose}>\n        <WestIcon sx={{\n                  width: 18,\n                height: 18,\n                marginBottom: -0.2,\n                marginRight: 2\n            }}> </WestIcon>To transaction\n        </StyledBtn>\n     <ModalBox>{children}</ModalBox>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport Select from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { registerLocale } from 'react-datepicker';\nimport uk from 'date-fns/locale/uk';\nimport {\n  addTransactionExpense,\n  addTransactionIncome,\n} from 'redux/transaction/transactionOperations';\nimport {\n  FormStyled,\n  WrapStyled,\n  BtnStyled,\n  DatePickerStyled,\n  CalendarBox,\n  InputStyled,\n  BtnContainerStyled,\n  InputWrapStyled,\n  NumericFormatStyled,\n} from './AddTransaction.styled';\nimport { selectionExpenses, selectionIncome } from 'shared/category';\nimport { getFilterDate } from 'redux/transaction/transactionSlice';\nimport { objectStyle } from './AddTransactionStyle';\nimport { selectBalance } from 'redux/transaction/transactionSelectors';\nimport { useMediaQuery } from 'react-responsive';\nimport Modal from 'components/Modal/Modal';\n\nconst AddTransaction = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const expenses = params.transactionType;\n\n  const [options, setOptions] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  registerLocale('uk', uk);\n  const [startDate, setStartDate] = useState(new Date());\n  const curDate = startDate.toISOString().split('T')[0];\n\n  const paramsBalance = useSelector(selectBalance);\n  const balance = expenses === 'income' ? 1000000 : paramsBalance;\n\n  const [form, setForm] = useState({\n    date: '',\n    amount: '',\n    description: '',\n    category: '',\n  });\n\n  useEffect(() => {\n    expenses !== 'income'\n      ? setOptions(selectionExpenses)\n      : setOptions(selectionIncome);\n  }, [expenses]);\n\n  const handleChange = e => {\n    let { name, value } = e.target;\n    if (name === 'amount') value = Number(value);\n    setForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    expenses !== 'income'\n      ? dispatch(addTransactionExpense(form))\n      : dispatch(addTransactionIncome(form));\n    handleClickReset();\n    setForm({ description: '', amount: '', category: '', date: curDate });\n    setSelected(null);\n  };\n\n  const handleClickReset = () => {\n    setForm(prev => ({ ...prev, amount: '', category: '', description: '' }));\n    setSelected(null);\n  };\n\n  useEffect(() => {\n    setForm(prev => ({ ...prev, date: curDate }));\n    dispatch(getFilterDate(curDate));\n  }, [curDate, dispatch]);\n\n  useEffect(() => {\n    dispatch(getFilterDate(''));\n  }, [dispatch]);\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  const tableMobile = useMediaQuery({ query: '(max-width: 768px)' });\n\n  return (\n    <WrapStyled>\n      {tableMobile && !isModalOpen && (\n        <BtnStyled data-mobile type=\"button\" onClick={() => toggleModal()}>\n          Add transaction\n        </BtnStyled>\n      )}\n      {!isModalOpen && (\n        <CalendarBox>\n          <CalendarMonthIcon color=\"success\" />\n          <DatePickerStyled\n            required\n            locale=\"uk\"\n            selected={startDate}\n            onChange={date => setStartDate(date)}\n            maxDate={new Date()}\n            name=\"date\"\n          />\n        </CalendarBox>\n      )}\n\n      {!tableMobile && (\n        <FormStyled onSubmit={handleSubmit}>\n          <InputWrapStyled>\n            <InputStyled\n              required\n              value={form.description}\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Product description\"\n              onChange={handleChange}\n            />\n\n            <Select\n              required\n              options={options}\n              placeholder=\"Product category\"\n              value={selected}\n              styles={objectStyle}\n              name=\"category\"\n              onChange={data => {\n                setForm(prev => ({ ...form, category: data.trans }));\n                setSelected(data);\n              }}\n            />\n\n            <NumericFormatStyled\n              required\n              placeholder=\"0.00 UAH\"\n              value={form.amount}\n              allowNegative={false}\n              decimalScale={2}\n              allowedDecimalSeparators={['.']}\n              allowLeadingZeros={false}\n              thousandSeparator=\" \"\n              suffix=\" UAH\"\n              displayType=\"input\"\n              isAllowed={values => {\n                const { floatValue } = values;\n                return floatValue < balance && floatValue >= 1;\n              }}\n              onValueChange={({ floatValue }, sourceInfo) => {\n                setForm(prev => ({ ...prev, amount: floatValue }));\n              }}\n            />\n          </InputWrapStyled>\n          <BtnContainerStyled>\n            <BtnStyled type=\"submit\">Input</BtnStyled>\n            <BtnStyled type=\"reset\" onClick={handleClickReset}>\n              Clear\n            </BtnStyled>\n          </BtnContainerStyled>\n        </FormStyled>\n      )}\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <FormStyled onSubmit={handleSubmit}>\n            <InputWrapStyled>\n              <InputStyled\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Product description\"\n                onChange={handleChange}\n              />\n\n              <Select\n                options={options}\n                placeholder=\"Product category\"\n                value={selected}\n                styles={objectStyle}\n                name=\"category\"\n                onChange={data => {\n                  setForm(prev => ({ ...form, category: data.trans }));\n                  setSelected(data);\n                }}\n              />\n\n              <NumericFormatStyled\n                placeholder=\"0.00 UAH\"\n                value={form.amount}\n                allowNegative={false}\n                decimalScale={2}\n                allowedDecimalSeparators={['.']}\n                allowLeadingZeros={false}\n                thousandSeparator=\" \"\n                suffix=\" UAH\"\n                displayType=\"input\"\n                isAllowed={values => {\n                  const { floatValue } = values;\n                  return floatValue < balance && floatValue >= 1;\n                }}\n                onValueChange={({ floatValue }, sourceInfo) => {\n                  setForm(prev => ({ ...prev, amount: floatValue }));\n                }}\n              />\n            </InputWrapStyled>\n            <BtnContainerStyled>\n              <BtnStyled type=\"submit\">Input</BtnStyled>\n              <BtnStyled type=\"reset\" onClick={handleClickReset}>\n                Clear\n              </BtnStyled>\n            </BtnContainerStyled>\n          </FormStyled>\n        </Modal>\n      )}\n    </WrapStyled>\n  );\n};\n\nexport default AddTransaction;\n","import styled from '@emotion/styled';\n\nexport const WrapperStyled = styled.div`\n  width: 213px;\n  height: 280px;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  background-color: rgba(86, 86, 107, 0.5);\n`;\n\nexport const TextStyled = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 12px 0;\n  width: 100%;\n\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.16;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #f6f7fb;\n`;\n\nexport const DivStyled = styled.div`\n  width: 100%;\n  height: 242px;\n  overflow: hidden auto;\n  &::-webkit-scrollbar {\n    display: block;\n    height: 82px;\n    width: 6px;\n    -webkit-appearance: none;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    background-color: #60c470;\n  }\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  &::-webkit-scrollbar-track-piece:end {\n    background-color: transparent;\n    margin-bottom: 2px;\n  }\n  &::-webkit-scrollbar-track-piece:start {\n    background-color: transparent;\n    margin-top: 2px;\n  }\n`;\n\nexport const ListStyled = styled.ul`\n  padding-left: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding-top: 12px;\n  padding-bottom: 12px;\n  display: flex;\n  justify-content: space-between;\n\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  color: #c7ccdc;\n  border-bottom: 2px solid #383847;\n\n  &:first-of-type {\n    border-top: 4px solid #383847;\n  }\n`;\n\nexport const MonthStyled = styled.span`\n  padding-left: 12px;\n`;\n\nexport const SumStyled = styled.span`\n  padding-right: 12px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport {\n  selectMonthExpenses,\n  selectMonthIncome,\n  selectIncome,\n  selectExpenses,\n} from 'redux/transaction/transactionSelectors';\nimport {\n  getTransactionExpense,\n  getTransactionIncome,\n} from 'redux/transaction/transactionOperations';\nimport {\n  WrapperStyled,\n  TextStyled,\n  DivStyled,\n  ListStyled,\n  ListItem,\n  MonthStyled,\n  SumStyled,\n} from './Summary.styled';\n\nconst Summary = () => {\n  const { transactionType } = useParams();\n\n  const monthExpenses = useSelector(selectMonthExpenses);\n  const monthIncome = useSelector(selectMonthIncome);\n  const transactionIncome = useSelector(selectIncome);\n  const transactionExpenses = useSelector(selectExpenses);\n\n  const conditionalSelect =\n    transactionType === 'expenses' ? monthExpenses : monthIncome;\n\n  const sumValues = Object.values(conditionalSelect).reverse();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    transactionType === 'expenses'\n      ? monthExpenses.length === 0 && dispatch(getTransactionExpense())\n      : monthIncome.length === 0 && dispatch(getTransactionIncome());\n  }, [\n    dispatch,\n    transactionType,\n    transactionIncome,\n    transactionExpenses,\n    monthExpenses,\n    monthIncome,\n  ]);\n\n  const currentMonth = 11 - new Date().getMonth();\n  // для перевірки скролу:\n  //const currentMonth = 0;\n\n  const monthEng = [\n    'December',\n    'November',\n    'October',\n    'September',\n    'August',\n    'July',\n    'June',\n    'May',\n    'April',\n    'March',\n    'February',\n    'January',\n  ];\n\n  return (\n    <WrapperStyled>\n      <TextStyled>Summary</TextStyled>\n      <DivStyled>\n        <ListStyled>\n          {sumValues.map((sum, idx) => {\n            if (idx >= currentMonth) {\n              if (sum === 'N/A') {\n                sum = 0;\n              }\n              return (\n                <ListItem key={monthEng[idx]}>\n                  <MonthStyled>{monthEng[idx]}</MonthStyled>\n                  <SumStyled>{sum}</SumStyled>\n                </ListItem>\n              );\n            }\n            return null;\n          })}\n        </ListStyled>\n      </DivStyled>\n    </WrapperStyled>\n  );\n};\n\nexport default Summary;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { Tabs, TabList } from 'react-tabs';\n\nexport const NavLinkStyled = styled(NavLink)`\n  display: block;\n  width: 138px;\n  padding: 13px 0;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-decoration: none;\n  text-align: center;\n  background: linear-gradient(245.22deg, #383847 14.1%, #2d2d38 89.51%);\n  border-top-right-radius: 20px;\n  border-top-left-radius: 20px;\n  color: #f6f7fb;\n  &:last-of-type {\n    margin: -1px;\n  }\n\n  &.active {\n    background: #383847;\n    color: #60c470;\n  }\n  @media screen and (max-width: 767px) {\n/* width: 50vw; */\nwidth: 50vw;\n\npadding: 20px 0;\n &.active {\n  border: 1px  solid #60C470\n  /* box-shadow: 0px 0px 6px #41A350; */\n }\n\n}\n\n`;\n\nexport const WrapStyled = styled.div`\n  display: flex;\n  @media screen and (max-width: 767px) {\n    justify-content: center;\n  }\n`;\n\nexport const mobileTab = styled(NavLink)`\n  position: fixed;\n  bottom: 0%;\n  display: block;\n  width: 138px;\n  padding: 13px 0;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-decoration: none;\n  text-align: center;\n  background: linear-gradient(245.22deg, #383847 14.1%, #2d2d38 89.51%);\n  border-top-right-radius: 20px;\n  border-top-left-radius: 20px;\n  color: #f6f7fb;\n  @media screen and (max-width: 767px) {\n  position: fixed;bottom: 0;\nwidth: 50vw;\n\n}\n\n  &:last-of-type {\n    margin: -1px;\n  }\n`;\n\nexport const TabsStyled = styled(Tabs)`\n\n@media screen and (max-width: 767px) {\n  position: fixed;bottom: 0;\n max-width: 100vw;\n\n}\n\n`\n\nexport const TabsListStyled = styled(TabList)`\ndisplay: flex;\nflex-wrap: nowrap;\nmax-width: 100vw;\n`","import { useState } from 'react';\nimport {\n  NavLinkStyled,\n  WrapStyled,\n  TabsStyled,\n  TabsListStyled,\n} from './TransactionTypeTabs.styled';\nimport { Tab, TabList, TabPanel } from 'react-tabs';\nimport { useMediaQuery } from 'react-responsive';\n\nconst TransactionTypeTabs = () => {\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const handleSelect = selectedIndex => {\n    setTabIndex(selectedIndex);\n  };\n\n  const tableMobile = useMediaQuery({ query: '(max-width: 768px)' });\n\n  return (\n    <WrapStyled>\n      <TabsStyled selectedIndex={tabIndex} onSelect={handleSelect}>\n        {!tableMobile && (\n          <TabList>\n            <Tab>\n              <NavLinkStyled to=\"/home/expenses\">EXPENSES</NavLinkStyled>\n            </Tab>\n            <Tab>\n              <NavLinkStyled to=\"/home/income\">INCOME</NavLinkStyled>\n            </Tab>\n          </TabList>\n        )}\n        {tableMobile && (\n          <TabsListStyled>\n            <Tab>\n              <NavLinkStyled to=\"/home/expenses\">EXPENSES</NavLinkStyled>\n            </Tab>\n            <Tab>\n              <NavLinkStyled to=\"/home/income\">INCOME</NavLinkStyled>\n            </Tab>\n          </TabsListStyled>\n        )}\n        <TabPanel />\n        <TabPanel />\n      </TabsStyled>\n    </WrapStyled>\n  );\n};\n\nexport default TransactionTypeTabs;\n","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-delete\",\n    viewBox: \"0 0 28 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.214 7.153l-0.706-2.118c-0.269-0.807-1.021-1.349-1.871-1.349h-5.938v-1.933c0-0.966-0.786-1.753-1.752-1.753h-5.438c-0.966 0-1.752 0.786-1.752 1.753v1.933h-5.938c-0.85 0-1.603 0.542-1.872 1.349l-0.707 2.118c-0.161 0.482-0.079 1.016 0.218 1.428s0.778 0.659 1.286 0.659h0.739l1.626 20.1c0.121 1.491 1.386 2.66 2.882 2.66h12.804c1.495 0 2.761-1.169 2.882-2.66l1.625-20.1h0.409c0.508 0 0.989-0.246 1.286-0.658s0.379-0.947 0.218-1.429zM11.632 1.875h5.191v1.811h-5.191v-1.811zM21.807 29.189c-0.043 0.525-0.487 0.936-1.013 0.936h-12.804c-0.525 0-0.97-0.411-1.013-0.936l-1.614-19.949h18.056l-1.613 19.949zM3.147 7.365l0.579-1.737c0.013-0.040 0.051-0.067 0.093-0.067h20.818c0.042 0 0.079 0.027 0.093 0.067l0.579 1.737h-22.162z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.817 29.122c0.017 0.001 0.033 0.001 0.050 0.001 0.495 0 0.909-0.388 0.935-0.889l0.88-16.9c0.027-0.517-0.371-0.958-0.887-0.985-0.518-0.028-0.958 0.37-0.985 0.887l-0.88 16.9c-0.027 0.517 0.37 0.958 0.887 0.985z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.695 28.237c0.027 0.5 0.441 0.886 0.935 0.886 0.017 0 0.035-0 0.052-0.001 0.517-0.028 0.913-0.47 0.885-0.987l-0.922-16.9c-0.028-0.517-0.47-0.913-0.987-0.885s-0.913 0.47-0.885 0.987l0.922 16.9z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.238 29.124c0.518 0 0.938-0.42 0.938-0.938v-16.9c0-0.518-0.42-0.938-0.938-0.938s-0.938 0.42-0.938 0.938v16.9c0 0.518 0.42 0.938 0.938 0.938z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.516d2f03d6b1acdbbe63b363c88904b8.svg\";\nexport { ForwardRef as ReactComponent };","// import { HandySvg } from 'handy-svg';\nimport styled from 'styled-components';\n\nexport const ScrollWrapStyled = styled.div`\n  overflow-x: hidden;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    display: block;\n    height: 82px;\n    width: 6px;\n    -webkit-appearance: none;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    background-color: #60c470;\n  }\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  &::-webkit-scrollbar-track-piece:end {\n    background-color: transparent;\n    margin-bottom: 2px;\n  }\n  &::-webkit-scrollbar-track-piece:start {\n    background-color: transparent;\n    margin-top: 2px;\n  }\n\n  @media screen and (min-width: 320px) {\n  }\n  @media screen and (min-width: 768px) {\n    min-width: 624px;\n    max-width: 624px;\n    max-height: 400px;\n  }\n  @media screen and (min-width: 1280px) {\n    min-width: 746px;\n    max-width: 746px;\n  }\n`;\n\nexport const TableStyled = styled.table`\n  width: 100%;\n  table-layout: auto;\n  border-spacing: 0;\n`;\n\nexport const TableHeadRowStyled = styled.tr`\n  min-width: 100%;\n  height: 38px;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #f6f7fb;\n  background: rgba(86, 86, 107, 0.5);\n`;\n\nexport const TableHeadColumnStyled = styled.td`\n  padding: 12px 24px;\n  margin: 0;\n\n  &:first-child {\n    width: 20%;\n    border-top-left-radius: 20px;\n  }\n  &:nth-child(2) {\n    width: 30%;\n  }\n  &:nth-child(3) {\n    width: 20%;\n  }\n  &:nth-child(4) {\n    width: 20%;\n  }\n  &:last-child {\n    width: 10%;\n    border-top-right-radius: 20px;\n  }\n  &:nth-child(n + 3) {\n    text-align: center;\n  }\n`;\n\nexport const TableRowStyled = styled.tr`\n  width: 100%;\n  height: 38px;\n  padding: 12px 24px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.17;\n  color: #c7ccdc;\n`;\n\nexport const TableColumnStyled = styled.td`\n  padding: 0 24px;\n  margin: 0;\n  border-bottom: 2px solid #474759;\n\n  &:first-child {\n    border-left: 2px solid #474759;\n    width: 20%;\n  }\n  &:nth-child(2) {\n    width: 30%;\n  }\n  &:nth-child(3) {\n    width: 20%;\n  }\n  &:nth-child(4) {\n    width: 20%;\n    font-weight: 700;\n    color: #fe4566;\n    &[data-color='income'] {\n      color: #60c470;\n    }\n  }\n  &:last-child {\n    width: 10%;\n    padding: 4px;\n    border-right: 2px solid #474759;\n  }\n  &:nth-child(n + 3) {\n    text-align: center;\n  }\n`;\n\nexport const BtnDelStyled = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  background: rgba(86, 86, 107, 0.1);\n  border-radius: 4px;\n\n  &:hover {\n    background: rgba(86, 86, 107, 0.5);\n  }\n  & svg {\n    width: 15px;\n    height: 18px;\n    fill: rgba(199, 204, 220, 0.5);\n    &:hover {\n      fill: #f6f7fb;\n    }\n  }\n`;\n\n// ============== MOBILE =========\nexport const StyledBox = styled.div`\n  @media screen and (max-width: 767px) {\n    margin: 0 auto;\n  }\n  \n`;\n\nexport const StyledWrap = styled.div`\n  margin: 0 auto;\n`;\n\nexport const StyledList = styled.ul`\n  min-width: 282px;\n  margin: 0 auto;\n  margin-bottom: 12px;\n  list-style: none;\n  max-width: 280px;\n`;\nexport const StyledItem = styled.li`\n  min-width: 282px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 4px;\n  border-bottom: 1px solid #80848f;\n`;\nexport const StyledDescript = styled.h3`\n  font-size: 12px;\n  font-weight: 700;\n  color: #c7ccdc;\n`;\nexport const StyledDate = styled.p`\nfont-size: 8px;\ncolor: #c7ccdc;\nmargin-top: 7px;\n`;\n\nexport const StyledRight = styled.div`\ndisplay: flex;\nalign-items: center;\n`;\n\nexport const StyledAmount = styled.h2`\n  font-weight: 700;\n  color: #fe4566;\n  font-size: 12px;\n  margin-right: 8px;\n  &[data-color='income'] {\n    color: #60c470;\n  }\n`;\n\n\n","import * as React from 'react';\n// import { useEffect } from 'react';\nimport { useMemo } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport sprite from 'images/sprite.svg';\nimport {\n  selectFilterDate,\n  selectIncome,\n  selectExpenses,\n} from 'redux/transaction/transactionSelectors';\nimport {\n  BtnDelStyled,\n  ScrollWrapStyled,\n  StyledAmount,\n  StyledDate,\n  StyledDescript,\n  StyledItem,\n  StyledList,\n  StyledRight,\n  StyledWrap,\n  TableColumnStyled,\n  TableHeadColumnStyled,\n  TableHeadRowStyled,\n  TableRowStyled,\n  TableStyled,\n} from './TransactionsList.styled';\nimport { selectionExpenses, selectionIncome } from '../../shared/category';\nimport { deleteTransaction } from 'redux/transaction/transactionOperations';\nimport ModalConfirm from 'components/ModalConfirm/ModalConfirm';\n// import { useEffect } from 'react';\n\nconst TransactionsList = () => {\n  const dispatch = useDispatch();\n  const transactionExpenses = useSelector(selectExpenses);\n  const transactionIncomes = useSelector(selectIncome);\n  const dateFilter = useSelector(selectFilterDate);\n\n  const { transactionType } = useParams();\n  const [delTransaction, setDelTransaction] = useState([]);\n  const categoryChange = [...selectionExpenses, ...selectionIncome];\n\n  const transactionIncome = useMemo(() => {\n    return transactionIncomes\n      .filter(el => el.date.includes(dateFilter))\n      .sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n  }, [dateFilter, transactionIncomes]);\n  const transactionExpense = useMemo(() => {\n    return transactionExpenses\n      .filter(el => el.date.includes(dateFilter))\n      .sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n  }, [dateFilter, transactionExpenses]);\n\n  const isRender =\n    transactionType === 'income' ? transactionIncome : transactionExpense;\n  const transaction = isRender;\n  // const isAddTransactions = 9 - transaction.length;\n    \n  // useEffect(() => {\n  //   if (isAddTransactions >= 0) {\n  //     for (let i = 0; i < isAddTransactions; i++) {\n  //       transaction.push({\n  //         _id: i,\n  //         date: '',\n  //         description: '',\n  //         category: '',\n  //         amount: '',\n  //       });\n  //     }\n  //   }\n  // }, [isAddTransactions, transaction]);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n  const handleOpen = data => {\n    setDelTransaction(data);\n    setShowModal(true);\n  };\n\n  const handleDeleTransaction = () => {\n    dispatch(deleteTransaction(delTransaction));\n    setShowModal(false);\n  };\n\n  const tableMobile = useMediaQuery({ query: '(max-width: 768px)' });\n  return (\n    <div>\n      {!tableMobile ? (\n        <>\n          <TableStyled>\n            <thead>\n              <TableHeadRowStyled>\n                <TableHeadColumnStyled>DATE</TableHeadColumnStyled>\n                <TableHeadColumnStyled>DESCRIPTION</TableHeadColumnStyled>\n                <TableHeadColumnStyled>CATEGORY</TableHeadColumnStyled>\n                <TableHeadColumnStyled>SUM</TableHeadColumnStyled>\n                <TableHeadColumnStyled></TableHeadColumnStyled>\n              </TableHeadRowStyled>\n            </thead>\n          </TableStyled>\n          <ScrollWrapStyled>\n            <TableStyled>\n              <tbody>\n                {transaction.map(el => (\n                  <TableRowStyled key={el._id}>\n                    <TableColumnStyled>{el.date}</TableColumnStyled>\n                    <TableColumnStyled>{el.description}</TableColumnStyled>\n                    <TableColumnStyled>\n                      {categoryChange\n                        .filter(\n                          ({ value, label, trans }) => trans === el.category\n                        )\n                        .map(el => el.label)\n                        .join()}\n                    </TableColumnStyled>\n                    <TableColumnStyled data-color={transactionType}>\n                      {el.amount === ''\n                        ? ''\n                        : transactionType === 'income'\n                        ? el.amount.toFixed(2)\n                        : `-${el.amount.toFixed(2)} UAH.`}\n                    </TableColumnStyled>\n                    <TableColumnStyled>\n                      {typeof el.amount === 'string' ? (\n                        ''\n                      ) : (\n                        <BtnDelStyled\n                          type=\"button\"\n                          onClick={() => handleOpen([el._id, transactionType])}\n                        >\n                          <svg>\n                            <use href={sprite + '#icon-delete'}></use>\n                          </svg>\n                        </BtnDelStyled>\n                      )}\n                    </TableColumnStyled>\n                  </TableRowStyled>\n                ))}\n              </tbody>\n            </TableStyled>\n          </ScrollWrapStyled>\n          {showModal && (\n            <ModalConfirm\n              title=\"Are you sure?\"\n              onClose={handleClose}\n              onConfirm={handleDeleTransaction}\n            />\n          )}\n        </>\n      ) : (\n        <StyledWrap>\n          <StyledList>\n            {transaction.map(el => (\n              <StyledItem key={el._id}>\n                <div>\n                  <StyledDescript>{el.description}</StyledDescript>\n                  <StyledDate>\n                    {el.date}&#160;&#160;\n                    {categoryChange\n                      .filter(\n                        ({ value, label, trans }) => trans === el.category\n                      )\n                      .map(el => el.label)\n                      .join()}\n                  </StyledDate>\n                </div>\n                <StyledRight>\n                  <StyledAmount data-color={transactionType}>\n                    {el.amount === ''\n                      ? ''\n                      : transactionType === 'income'\n                      ? el.amount.toFixed(2)\n                      : `-${el.amount.toFixed(2)} UAH.`}\n                  </StyledAmount>\n                  {typeof el.amount === 'string' ? (\n                    ''\n                  ) : (\n                    <BtnDelStyled\n                      type=\"button\"\n                      onClick={() => handleOpen([el._id, transactionType])}\n                    >\n                      <svg>\n                        <use href={sprite + '#icon-delete'}></use>\n                      </svg>\n                    </BtnDelStyled>\n                  )}\n                </StyledRight>\n              </StyledItem>\n            ))}\n          </StyledList>\n        </StyledWrap>\n      )}\n    </div>\n  );\n};\n\nexport default TransactionsList;\n","import styled from '@emotion/styled';\n\nexport const SectionStyled = styled.section`\n  margin: 0 auto;\n  width: 100%;\n\n  @media screen and (min-width: 320px) and (max-width: 767px){\n    width: 280x;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  @media screen and (min-width: 768px) {\n    width: 704px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1098px;\n  }\n`;\n\nexport const ContainerStyled = styled.div`\n  /* width: 100%; */\n  margin: 0 auto;\n  background: linear-gradient(\n    115.74deg,\n    #383847 23.54%,\n    rgba(56, 56, 71, 0.29) 107.94%\n  );\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n  border-radius: 0px;\n\n  @media screen and (min-width: 320px) and (max-width: 767px) {\n    background: transparent;\n    box-shadow: none;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 24px 42px 40px;\n    border-radius: 0px 30px 30px 30px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 32px 32px 40px 32px;\n  }\n`;\n\nexport const BoxStyled = styled.div`\n  display: flex;\n\n@media screen and (min-width: 320px) {\n  }\n  @media screen and (min-width: 768px) {\n    flex-wrap: wrap;\n    gap:40px;\n  }\n  @media screen and (min-width: 1280px) {\n    flex-wrap: nowrap;\n    justify-content: space-between;\n  }\n\n  \n  \n`;\n","import { useMediaQuery } from 'react-responsive';\nimport AddTransaction from 'components/AddTransaction/AddTransaction';\nimport Summary from 'components/Summary/Summary';\nimport TransactionTypeTabs from 'components/TransactionTypeTabs/TransactionTypeTabs';\nimport TransactionsList from 'components/TransactionsList/TransactionsList';\nimport {\n  BoxStyled,\n  ContainerStyled,\n  SectionStyled,\n} from './TransactionContainer.styled';\n\nconst TransactionContainer = () => {\n  const isTablet = useMediaQuery({ query: '(min-width: 768px)' });\n  const tableMobile = useMediaQuery({ query: '(max-width: 768px)' });\n\n  return (\n    <SectionStyled>\n      {!tableMobile && <TransactionTypeTabs />}\n      <ContainerStyled>\n        <AddTransaction />\n        <BoxStyled>\n          <TransactionsList />\n          {isTablet && <Summary />}\n        </BoxStyled>\n      </ContainerStyled>\n      {tableMobile && <TransactionTypeTabs />}\n    </SectionStyled>\n  );\n};\n\nexport default TransactionContainer;\n","import HomeBar from 'components/HomeBar/HomeBar';\nimport TransactionContainer from 'components/TransactionContainer/TransactionContainer';\nimport { generatePath } from 'react-router-dom';\n\nconst Home = () => {\n  generatePath('/home/category', {category: \"expenses\"});\n  return (\n    <section>\n      <HomeBar />\n      <TransactionContainer />\n    </section>\n  );\n};\n\nexport default Home;\n","export const selectionExpenses = [\n  { value: 'products', label: 'Products', trans: 'Продукты' },\n  { value: 'alcohol', label: 'Alcohol', trans: 'Алкоголь' },\n  { value: 'entertainment', label: 'Entertain', trans: 'Развлечения' },\n  { value: 'health', label: 'Health', trans: 'Здоровье' },\n  { value: 'transport', label: 'Transport', trans: 'Транспорт' },\n  { value: 'housing', label: 'Housing', trans: 'Всё для дома' },\n  { value: 'hobbies', label: 'Sports, hobbies', trans: 'Спорт и хобби' },\n  { value: 'technique', label: 'Technique', trans: 'Техника' },\n  {\n    value: 'communal',\n    label: 'Communal, communication',\n    trans: 'Коммуналка и связь',\n  },\n  { value: 'education', label: 'Education', trans: 'Образование' },\n  { value: 'other', label: 'Other', trans: 'Прочее' },\n];\n\nexport const selectionIncome = [\n  { value: 'salary', label: 'Salary', trans: 'З/П' },\n  { value: 'income', label: 'Add. Income', trans: 'Доп. доход' },\n];\n"],"names":["TooltipStyled","styled","className","other","Tooltip","classes","tooltip","tooltipClasses","FormStyled","TextStyled","BoxStyled","StyledNumericFormat","NumericFormat","ButtonStyled","MessageStyled","useState","open","setOpen","toggleOpen","setToggleOpen","toggleClose","setToggleClose","newBalance","setNewBalance","handleClose","handleOpen","balance","useSelector","selectBalance","expenses","selectExpenses","incomes","selectIncome","dispatch","useDispatch","useEffect","addBalance","length","onSubmit","e","preventDefault","Number","parseFloat","currentTarget","elements","value","toast","onClose","onOpen","disableFocusListener","disableHoverListener","disableTouchListener","title","arrow","placement","required","decimalScale","fixedDecimalScale","minLength","maxLength","suffix","placeholder","name","onValueChange","values","sourceInfo","type","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","WrapperStyled","IconStyled","EqualizerIcon","Balance","NavLink","to","WrapStyled","CalendarBox","DatePickerStyled","DatePicker","InputWrapStyled","InputStyled","NumericFormatStyled","BtnContainerStyled","BtnStyled","objectStyle","control","baseStyles","state","outline","border","cursor","background","height","width","fontSize","color","borderRadius","valueContainer","paddingTop","paddingLeft","indicatorSeparator","dropdownIndicator","menu","option","letterSpacing","lineHeight","padding","singleValue","container","styles","Overlay","ModalBox","StyledBtn","children","modalRoot","document","querySelector","createPortal","onClick","West","sx","marginBottom","marginRight","useParams","transactionType","options","setOptions","selected","setSelected","isModalOpen","setIsModalOpen","registerLocale","uk","Date","startDate","setStartDate","curDate","toISOString","split","paramsBalance","date","amount","description","category","form","setForm","selectionExpenses","selectionIncome","handleChange","target","prev","handleSubmit","addTransactionExpense","addTransactionIncome","handleClickReset","getFilterDate","toggleModal","tableMobile","useMediaQuery","query","CalendarMonth","locale","onChange","maxDate","data","trans","allowNegative","allowedDecimalSeparators","allowLeadingZeros","thousandSeparator","displayType","isAllowed","floatValue","DivStyled","ListStyled","ListItem","MonthStyled","SumStyled","monthExpenses","selectMonthExpenses","monthIncome","selectMonthIncome","transactionIncome","transactionExpenses","conditionalSelect","sumValues","Object","reverse","getTransactionExpense","getTransactionIncome","currentMonth","getMonth","monthEng","map","sum","idx","NavLinkStyled","TabsStyled","Tabs","TabsListStyled","TabList","tabIndex","setTabIndex","selectedIndex","onSelect","ScrollWrapStyled","TableStyled","TableHeadRowStyled","TableHeadColumnStyled","TableRowStyled","TableColumnStyled","BtnDelStyled","StyledWrap","StyledList","StyledItem","StyledDescript","StyledDate","StyledRight","StyledAmount","transactionIncomes","dateFilter","selectFilterDate","delTransaction","setDelTransaction","categoryChange","useMemo","filter","el","includes","sort","a","b","parse","transactionExpense","transaction","showModal","setShowModal","label","join","toFixed","_id","href","sprite","ModalConfirm","onConfirm","deleteTransaction","SectionStyled","ContainerStyled","isTablet","generatePath"],"sourceRoot":""}